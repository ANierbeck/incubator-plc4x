<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="PLC4J: Protocol: Driver-Base: Base"><sessioninfo id="plc4x-vm.apache.org-7391cfa" start="1537959648961" dump="1537959654216"/><package name="org/apache/plc4x/java/base/model"><class name="org/apache/plc4x/java/base/model/DefaultPlcConsumerRegistration"><method name="&lt;init&gt;" desc="(Ljava/util/function/Consumer;[Lorg/apache/plc4x/java/base/model/InternalPlcSubscriptionHandle;)V" line="33"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConsumerHash" desc="()I" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAssociatedHandles" desc="()Ljava/util/Collection;" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="50"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="63"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="DefaultPlcConsumerRegistration.java"><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="2" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="2" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="10" ci="0" mb="2" cb="0"/><line nr="58" mi="5" ci="0" mb="2" cb="0"/><line nr="63" mi="15" ci="0" mb="0" cb="0"/><line nr="68" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="org/apache/plc4x/java/base/messages"><class name="org/apache/plc4x/java/base/messages/DefaultPlcProprietaryResponse"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/base/messages/InternalPlcProprietaryRequest;Ljava/lang/Object;)V" line="27"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResponse" desc="()Ljava/lang/Object;" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRequest" desc="()Lorg/apache/plc4x/java/base/messages/InternalPlcProprietaryRequest;" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/DefaultPlcReadRequest"><method name="&lt;init&gt;" desc="(Ljava/util/LinkedHashMap;)V" line="32"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOfFields" desc="()I" line="38"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldNames" desc="()Ljava/util/LinkedHashSet;" line="44"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getField" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/api/model/PlcField;" line="49"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFields" desc="()Ljava/util/LinkedList;" line="54"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder$BuilderItem"><method name="&lt;init&gt;" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/function/BiFunction;)V" line="229"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/PlcRawMessage"><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="30"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;Lorg/apache/plc4x/java/api/messages/PlcProtocolMessage;)V" line="33"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUserData" desc="()Lio/netty/buffer/ByteBuf;" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParent" desc="()Lorg/apache/plc4x/java/api/messages/PlcProtocolMessage;" line="44"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/DefaultPlcReadRequest$Builder"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/base/connection/PlcFieldHandler;)V" line="62"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/plc4x/java/api/messages/PlcReadRequest$Builder;" line="69"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lorg/apache/plc4x/java/api/messages/PlcReadRequest;" line="78"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$build$0" desc="(Ljava/util/LinkedHashMap;Ljava/lang/String;Ljava/lang/String;)V" line="80"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/DefaultPlcUnsubscriptionResponse"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldNames" desc="()Ljava/util/Collection;" line="31"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getField" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/api/model/PlcField;" line="36"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResponseCode" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/api/types/PlcResponseCode;" line="41"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRequest" desc="()Lorg/apache/plc4x/java/api/messages/PlcUnsubscriptionRequest;" line="46"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/DefaultPlcWriteRequest"><method name="&lt;init&gt;" desc="(Ljava/util/LinkedHashMap;)V" line="42"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOfFields" desc="()I" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldNames" desc="()Ljava/util/LinkedHashSet;" line="54"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getField" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/api/model/PlcField;" line="59"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFields" desc="()Ljava/util/LinkedList;" line="64"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldItem" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/base/messages/items/FieldItem;" line="68"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldItems" desc="()Ljava/util/LinkedList;" line="73"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOfValues" desc="(Ljava/lang/String;)I" line="78"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/DefaultPlcWriteResponse"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/base/messages/InternalPlcWriteRequest;Ljava/util/Map;)V" line="32"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRequest" desc="()Lorg/apache/plc4x/java/base/messages/InternalPlcWriteRequest;" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldNames" desc="()Ljava/util/Collection;" line="44"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getField" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/api/model/PlcField;" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResponseCode" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/api/types/PlcResponseCode;" line="54"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/PlcRequestContainer"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/base/messages/InternalPlcRequest;Ljava/util/concurrent/CompletableFuture;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRequest" desc="()Lorg/apache/plc4x/java/base/messages/InternalPlcRequest;" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResponseFuture" desc="()Ljava/util/concurrent/CompletableFuture;" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParent" desc="()Lorg/apache/plc4x/java/api/messages/PlcProtocolMessage;" line="59"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="71"><counter type="INSTRUCTION" missed="1" covered="28"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="84"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="79"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/base/messages/DefaultPlcSubscriptionEvent"><method name="&lt;init&gt;" desc="(Ljava/util/Calendar;[B)V" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOfValues" desc="(Ljava/lang/String;)I" line="43"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(Ljava/lang/String;I)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllObjects" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="58"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBoolean" desc="(Ljava/lang/String;)Z" line="63"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBoolean" desc="(Ljava/lang/String;I)Z" line="68"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(Ljava/lang/String;)Ljava/lang/Boolean;" line="73"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(Ljava/lang/String;I)Ljava/lang/Boolean;" line="78"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllBooleans" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="83"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByte" desc="(Ljava/lang/String;)Z" line="88"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByte" desc="(Ljava/lang/String;I)Z" line="93"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByte" desc="(Ljava/lang/String;)Ljava/lang/Byte;" line="98"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByte" desc="(Ljava/lang/String;I)Ljava/lang/Byte;" line="103"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllBytes" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="108"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidShort" desc="(Ljava/lang/String;)Z" line="113"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidShort" desc="(Ljava/lang/String;I)Z" line="118"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShort" desc="(Ljava/lang/String;)Ljava/lang/Short;" line="123"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShort" desc="(Ljava/lang/String;I)Ljava/lang/Short;" line="128"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllShorts" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="133"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidInteger" desc="(Ljava/lang/String;)Z" line="138"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidInteger" desc="(Ljava/lang/String;I)Z" line="143"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInteger" desc="(Ljava/lang/String;)Ljava/lang/Integer;" line="148"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInteger" desc="(Ljava/lang/String;I)Ljava/lang/Integer;" line="153"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllIntegers" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="158"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigInteger" desc="(Ljava/lang/String;)Z" line="163"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigInteger" desc="(Ljava/lang/String;I)Z" line="168"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigInteger" desc="(Ljava/lang/String;)Ljava/math/BigInteger;" line="173"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigInteger" desc="(Ljava/lang/String;I)Ljava/math/BigInteger;" line="178"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllBigIntegers" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="183"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidLong" desc="(Ljava/lang/String;)Z" line="188"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidLong" desc="(Ljava/lang/String;I)Z" line="193"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(Ljava/lang/String;)Ljava/lang/Long;" line="198"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(Ljava/lang/String;I)Ljava/lang/Long;" line="203"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllLongs" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="208"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidFloat" desc="(Ljava/lang/String;)Z" line="213"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidFloat" desc="(Ljava/lang/String;I)Z" line="218"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(Ljava/lang/String;)Ljava/lang/Float;" line="223"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(Ljava/lang/String;I)Ljava/lang/Float;" line="228"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllFloats" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="233"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDouble" desc="(Ljava/lang/String;)Z" line="238"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDouble" desc="(Ljava/lang/String;I)Z" line="243"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(Ljava/lang/String;)Ljava/lang/Double;" line="248"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(Ljava/lang/String;I)Ljava/lang/Double;" line="253"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllDoubles" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="258"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigDecimal" desc="(Ljava/lang/String;)Z" line="263"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigDecimal" desc="(Ljava/lang/String;I)Z" line="268"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigDecimal" desc="(Ljava/lang/String;)Ljava/math/BigDecimal;" line="273"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigDecimal" desc="(Ljava/lang/String;I)Ljava/math/BigDecimal;" line="278"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllBigDecimals" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="283"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidString" desc="(Ljava/lang/String;)Z" line="288"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidString" desc="(Ljava/lang/String;I)Z" line="293"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="298"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getString" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="303"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllStrings" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="308"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidTime" desc="(Ljava/lang/String;)Z" line="313"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidTime" desc="(Ljava/lang/String;I)Z" line="318"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTime" desc="(Ljava/lang/String;)Ljava/time/LocalTime;" line="323"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTime" desc="(Ljava/lang/String;I)Ljava/time/LocalTime;" line="328"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllTimes" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="333"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDate" desc="(Ljava/lang/String;)Z" line="338"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDate" desc="(Ljava/lang/String;I)Z" line="343"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDate" desc="(Ljava/lang/String;)Ljava/time/LocalDate;" line="348"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDate" desc="(Ljava/lang/String;I)Ljava/time/LocalDate;" line="353"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllDates" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="358"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDateTime" desc="(Ljava/lang/String;)Z" line="363"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDateTime" desc="(Ljava/lang/String;I)Z" line="368"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDateTime" desc="(Ljava/lang/String;)Ljava/time/LocalDateTime;" line="373"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDateTime" desc="(Ljava/lang/String;I)Ljava/time/LocalDateTime;" line="378"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllDateTimes" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="383"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByteArray" desc="(Ljava/lang/String;)Z" line="388"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByteArray" desc="(Ljava/lang/String;I)Z" line="393"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByteArray" desc="(Ljava/lang/String;)[Ljava/lang/Byte;" line="398"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByteArray" desc="(Ljava/lang/String;I)[Ljava/lang/Byte;" line="403"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllByteArrays" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="408"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldNames" desc="()Ljava/util/Collection;" line="413"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getField" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/api/model/PlcField;" line="418"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResponseCode" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/api/types/PlcResponseCode;" line="423"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRequest" desc="()Lorg/apache/plc4x/java/api/messages/PlcReadRequest;" line="428"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="161" covered="0"/><counter type="LINE" missed="80" covered="0"/><counter type="COMPLEXITY" missed="79" covered="0"/><counter type="METHOD" missed="79" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/DefaultPlcUnsubscriptionRequest$Builder"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addHandle" desc="(Lorg/apache/plc4x/java/api/model/PlcSubscriptionHandle;)Lorg/apache/plc4x/java/api/messages/PlcUnsubscriptionRequest$Builder;" line="71"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addHandle" desc="(Lorg/apache/plc4x/java/api/model/PlcSubscriptionHandle;[Lorg/apache/plc4x/java/api/model/PlcSubscriptionHandle;)Lorg/apache/plc4x/java/api/messages/PlcUnsubscriptionRequest$Builder;" line="77"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addHandles" desc="(Ljava/util/Collection;)Lorg/apache/plc4x/java/api/messages/PlcUnsubscriptionRequest$Builder;" line="84"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lorg/apache/plc4x/java/api/messages/PlcUnsubscriptionRequest;" line="90"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/DefaultPlcSubscriptionRequest$Builder"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/base/connection/PlcFieldHandler;)V" line="65"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addCyclicField" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/time/Duration;)Lorg/apache/plc4x/java/api/messages/PlcSubscriptionRequest$Builder;" line="72"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addChangeOfStateField" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/plc4x/java/api/messages/PlcSubscriptionRequest$Builder;" line="77"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEventField" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/plc4x/java/api/messages/PlcSubscriptionRequest$Builder;" line="82"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lorg/apache/plc4x/java/api/messages/PlcSubscriptionRequest;" line="87"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$build$0" desc="(Ljava/util/LinkedHashMap;Ljava/lang/String;Lorg/apache/plc4x/java/base/messages/DefaultPlcSubscriptionRequest$Builder$BuilderItem;)V" line="90"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/DefaultPlcSubscriptionRequest"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOfFields" desc="()I" line="37"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldNames" desc="()Ljava/util/LinkedHashSet;" line="42"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getField" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/api/model/PlcField;" line="47"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFields" desc="()Ljava/util/LinkedList;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPlcSubscriptionType" desc="()Lorg/apache/plc4x/java/api/types/PlcSubscriptionType;" line="57"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/DefaultPlcSubscriptionRequest$Builder$BuilderItem"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/function/BiFunction;)V" line="103"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/DefaultPlcSubscriptionResponse"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/base/messages/InternalPlcSubscriptionRequest;Ljava/util/Map;)V" line="38"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubscriptionHandle" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/api/model/PlcSubscriptionHandle;" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldNames" desc="()Ljava/util/Collection;" line="51"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getField" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/api/model/PlcField;" line="57"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResponseCode" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/api/types/PlcResponseCode;" line="63"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRequest" desc="()Lorg/apache/plc4x/java/api/messages/PlcSubscriptionRequest;" line="68"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubscriptionHandles" desc="()Ljava/util/Collection;" line="73"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/base/connection/PlcFieldHandler;)V" line="87"><counter type="INSTRUCTION" missed="166" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Boolean;)Lorg/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder;" line="110"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Byte;)Lorg/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder;" line="115"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Short;)Lorg/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder;" line="120"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Integer;)Lorg/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder;" line="125"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/math/BigInteger;)Lorg/apache/plc4x/java/api/messages/PlcWriteRequest$Builder;" line="130"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Long;)Lorg/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder;" line="135"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Float;)Lorg/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder;" line="140"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Double;)Lorg/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder;" line="145"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/math/BigDecimal;)Lorg/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder;" line="150"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder;" line="155"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/time/LocalTime;)Lorg/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder;" line="160"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/time/LocalDate;)Lorg/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder;" line="165"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/time/LocalDateTime;)Lorg/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder;" line="170"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;[[B)Lorg/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder;" line="175"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;[[Ljava/lang/Byte;)Lorg/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder;" line="180"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder;" line="185"><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lorg/apache/plc4x/java/api/messages/PlcWriteRequest;" line="204"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addItem" desc="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder;" line="217"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$build$0" desc="(Ljava/util/LinkedHashMap;Ljava/lang/String;Lorg/apache/plc4x/java/base/messages/DefaultPlcWriteRequest$Builder$BuilderItem;)V" line="207"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="495" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="57" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/DefaultPlcReadResponse"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/base/messages/InternalPlcReadRequest;Ljava/util/Map;)V" line="41"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRequest" desc="()Lorg/apache/plc4x/java/base/messages/InternalPlcReadRequest;" line="48"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOfValues" desc="(Ljava/lang/String;)I" line="53"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldNames" desc="()Ljava/util/Collection;" line="62"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getField" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/api/model/PlcField;" line="67"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResponseCode" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/api/types/PlcResponseCode;" line="72"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="80"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(Ljava/lang/String;I)Ljava/lang/Object;" line="85"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllObjects" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="95"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBoolean" desc="(Ljava/lang/String;)Z" line="100"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBoolean" desc="(Ljava/lang/String;I)Z" line="105"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(Ljava/lang/String;)Ljava/lang/Boolean;" line="114"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(Ljava/lang/String;I)Ljava/lang/Boolean;" line="119"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllBooleans" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="128"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByte" desc="(Ljava/lang/String;)Z" line="142"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByte" desc="(Ljava/lang/String;I)Z" line="147"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByte" desc="(Ljava/lang/String;)Ljava/lang/Byte;" line="156"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByte" desc="(Ljava/lang/String;I)Ljava/lang/Byte;" line="161"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllBytes" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="170"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidShort" desc="(Ljava/lang/String;)Z" line="184"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidShort" desc="(Ljava/lang/String;I)Z" line="189"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShort" desc="(Ljava/lang/String;)Ljava/lang/Short;" line="198"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShort" desc="(Ljava/lang/String;I)Ljava/lang/Short;" line="203"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllShorts" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="212"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidInteger" desc="(Ljava/lang/String;)Z" line="226"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidInteger" desc="(Ljava/lang/String;I)Z" line="231"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInteger" desc="(Ljava/lang/String;)Ljava/lang/Integer;" line="240"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInteger" desc="(Ljava/lang/String;I)Ljava/lang/Integer;" line="245"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllIntegers" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="254"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigInteger" desc="(Ljava/lang/String;)Z" line="268"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigInteger" desc="(Ljava/lang/String;I)Z" line="273"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigInteger" desc="(Ljava/lang/String;)Ljava/math/BigInteger;" line="282"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigInteger" desc="(Ljava/lang/String;I)Ljava/math/BigInteger;" line="287"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllBigIntegers" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="296"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidLong" desc="(Ljava/lang/String;)Z" line="310"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidLong" desc="(Ljava/lang/String;I)Z" line="315"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(Ljava/lang/String;)Ljava/lang/Long;" line="324"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(Ljava/lang/String;I)Ljava/lang/Long;" line="329"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllLongs" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="338"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidFloat" desc="(Ljava/lang/String;)Z" line="352"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidFloat" desc="(Ljava/lang/String;I)Z" line="357"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(Ljava/lang/String;)Ljava/lang/Float;" line="366"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(Ljava/lang/String;I)Ljava/lang/Float;" line="371"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllFloats" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="380"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDouble" desc="(Ljava/lang/String;)Z" line="394"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDouble" desc="(Ljava/lang/String;I)Z" line="399"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(Ljava/lang/String;)Ljava/lang/Double;" line="408"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(Ljava/lang/String;I)Ljava/lang/Double;" line="413"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllDoubles" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="422"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigDecimal" desc="(Ljava/lang/String;)Z" line="436"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigDecimal" desc="(Ljava/lang/String;I)Z" line="441"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigDecimal" desc="(Ljava/lang/String;)Ljava/math/BigDecimal;" line="450"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigDecimal" desc="(Ljava/lang/String;I)Ljava/math/BigDecimal;" line="455"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllBigDecimals" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="464"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidString" desc="(Ljava/lang/String;)Z" line="478"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidString" desc="(Ljava/lang/String;I)Z" line="483"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="492"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getString" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="497"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllStrings" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="506"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidTime" desc="(Ljava/lang/String;)Z" line="520"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidTime" desc="(Ljava/lang/String;I)Z" line="525"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTime" desc="(Ljava/lang/String;)Ljava/time/LocalTime;" line="534"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTime" desc="(Ljava/lang/String;I)Ljava/time/LocalTime;" line="539"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllTimes" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="548"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDate" desc="(Ljava/lang/String;)Z" line="562"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDate" desc="(Ljava/lang/String;I)Z" line="567"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDate" desc="(Ljava/lang/String;)Ljava/time/LocalDate;" line="576"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDate" desc="(Ljava/lang/String;I)Ljava/time/LocalDate;" line="581"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllDates" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="590"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDateTime" desc="(Ljava/lang/String;)Z" line="604"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDateTime" desc="(Ljava/lang/String;I)Z" line="609"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDateTime" desc="(Ljava/lang/String;)Ljava/time/LocalDateTime;" line="618"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDateTime" desc="(Ljava/lang/String;I)Ljava/time/LocalDateTime;" line="623"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllDateTimes" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="632"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByteArray" desc="(Ljava/lang/String;)Z" line="646"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByteArray" desc="(Ljava/lang/String;I)Z" line="655"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByteArray" desc="(Ljava/lang/String;)[Ljava/lang/Byte;" line="664"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByteArray" desc="(Ljava/lang/String;I)[Ljava/lang/Byte;" line="673"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllByteArrays" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="682"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldInternal" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/base/messages/items/FieldItem;" line="696"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1015" covered="0"/><counter type="BRANCH" missed="126" covered="0"/><counter type="LINE" missed="283" covered="0"/><counter type="COMPLEXITY" missed="143" covered="0"/><counter type="METHOD" missed="80" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/DefaultPlcProprietaryRequest"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="25"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProprietaryRequest" desc="()Ljava/lang/Object;" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/DefaultPlcUnsubscriptionRequest"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="33"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOfFields" desc="()I" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldNames" desc="()Ljava/util/LinkedHashSet;" line="44"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getField" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/api/model/PlcField;" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFields" desc="()Ljava/util/LinkedList;" line="54"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInternalPlcSubscriptionHandles" desc="()Ljava/util/Collection;" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="DefaultPlcReadResponse.java"><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="2" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="2" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="8" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="2" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="2" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="2" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="2" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="7" ci="0" mb="2" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="2" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="2" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="2" cb="0"/><line nr="172" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="7" ci="0" mb="2" cb="0"/><line nr="175" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="2" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="2" cb="0"/><line nr="205" mi="4" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="2" cb="0"/><line nr="214" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="5" ci="0" mb="0" cb="0"/><line nr="216" mi="7" ci="0" mb="2" cb="0"/><line nr="217" mi="6" ci="0" mb="0" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="221" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="5" ci="0" mb="0" cb="0"/><line nr="231" mi="4" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="2" cb="0"/><line nr="233" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="2" ci="0" mb="0" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="245" mi="4" ci="0" mb="0" cb="0"/><line nr="246" mi="2" ci="0" mb="2" cb="0"/><line nr="247" mi="4" ci="0" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="2" cb="0"/><line nr="256" mi="3" ci="0" mb="0" cb="0"/><line nr="257" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="7" ci="0" mb="2" cb="0"/><line nr="259" mi="6" ci="0" mb="0" cb="0"/><line nr="261" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="268" mi="5" ci="0" mb="0" cb="0"/><line nr="273" mi="4" ci="0" mb="0" cb="0"/><line nr="274" mi="2" ci="0" mb="2" cb="0"/><line nr="275" mi="4" ci="0" mb="0" cb="0"/><line nr="277" mi="2" ci="0" mb="0" cb="0"/><line nr="282" mi="5" ci="0" mb="0" cb="0"/><line nr="287" mi="4" ci="0" mb="0" cb="0"/><line nr="288" mi="2" ci="0" mb="2" cb="0"/><line nr="289" mi="4" ci="0" mb="0" cb="0"/><line nr="291" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="4" ci="0" mb="0" cb="0"/><line nr="297" mi="2" ci="0" mb="2" cb="0"/><line nr="298" mi="3" ci="0" mb="0" cb="0"/><line nr="299" mi="5" ci="0" mb="0" cb="0"/><line nr="300" mi="7" ci="0" mb="2" cb="0"/><line nr="301" mi="6" ci="0" mb="0" cb="0"/><line nr="303" mi="2" ci="0" mb="0" cb="0"/><line nr="305" mi="2" ci="0" mb="0" cb="0"/><line nr="310" mi="5" ci="0" mb="0" cb="0"/><line nr="315" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="2" ci="0" mb="2" cb="0"/><line nr="317" mi="4" ci="0" mb="0" cb="0"/><line nr="319" mi="2" ci="0" mb="0" cb="0"/><line nr="324" mi="5" ci="0" mb="0" cb="0"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="330" mi="2" ci="0" mb="2" cb="0"/><line nr="331" mi="4" ci="0" mb="0" cb="0"/><line nr="333" mi="2" ci="0" mb="0" cb="0"/><line nr="338" mi="4" ci="0" mb="0" cb="0"/><line nr="339" mi="2" ci="0" mb="2" cb="0"/><line nr="340" mi="3" ci="0" mb="0" cb="0"/><line nr="341" mi="5" ci="0" mb="0" cb="0"/><line nr="342" mi="7" ci="0" mb="2" cb="0"/><line nr="343" mi="6" ci="0" mb="0" cb="0"/><line nr="345" mi="2" ci="0" mb="0" cb="0"/><line nr="347" mi="2" ci="0" mb="0" cb="0"/><line nr="352" mi="5" ci="0" mb="0" cb="0"/><line nr="357" mi="4" ci="0" mb="0" cb="0"/><line nr="358" mi="2" ci="0" mb="2" cb="0"/><line nr="359" mi="4" ci="0" mb="0" cb="0"/><line nr="361" mi="2" ci="0" mb="0" cb="0"/><line nr="366" mi="5" ci="0" mb="0" cb="0"/><line nr="371" mi="4" ci="0" mb="0" cb="0"/><line nr="372" mi="2" ci="0" mb="2" cb="0"/><line nr="373" mi="4" ci="0" mb="0" cb="0"/><line nr="375" mi="2" ci="0" mb="0" cb="0"/><line nr="380" mi="4" ci="0" mb="0" cb="0"/><line nr="381" mi="2" ci="0" mb="2" cb="0"/><line nr="382" mi="3" ci="0" mb="0" cb="0"/><line nr="383" mi="5" ci="0" mb="0" cb="0"/><line nr="384" mi="7" ci="0" mb="2" cb="0"/><line nr="385" mi="6" ci="0" mb="0" cb="0"/><line nr="387" mi="2" ci="0" mb="0" cb="0"/><line nr="389" mi="2" ci="0" mb="0" cb="0"/><line nr="394" mi="5" ci="0" mb="0" cb="0"/><line nr="399" mi="4" ci="0" mb="0" cb="0"/><line nr="400" mi="2" ci="0" mb="2" cb="0"/><line nr="401" mi="4" ci="0" mb="0" cb="0"/><line nr="403" mi="2" ci="0" mb="0" cb="0"/><line nr="408" mi="5" ci="0" mb="0" cb="0"/><line nr="413" mi="4" ci="0" mb="0" cb="0"/><line nr="414" mi="2" ci="0" mb="2" cb="0"/><line nr="415" mi="4" ci="0" mb="0" cb="0"/><line nr="417" mi="2" ci="0" mb="0" cb="0"/><line nr="422" mi="4" ci="0" mb="0" cb="0"/><line nr="423" mi="2" ci="0" mb="2" cb="0"/><line nr="424" mi="3" ci="0" mb="0" cb="0"/><line nr="425" mi="5" ci="0" mb="0" cb="0"/><line nr="426" mi="7" ci="0" mb="2" cb="0"/><line nr="427" mi="6" ci="0" mb="0" cb="0"/><line nr="429" mi="2" ci="0" mb="0" cb="0"/><line nr="431" mi="2" ci="0" mb="0" cb="0"/><line nr="436" mi="5" ci="0" mb="0" cb="0"/><line nr="441" mi="4" ci="0" mb="0" cb="0"/><line nr="442" mi="2" ci="0" mb="2" cb="0"/><line nr="443" mi="4" ci="0" mb="0" cb="0"/><line nr="445" mi="2" ci="0" mb="0" cb="0"/><line nr="450" mi="5" ci="0" mb="0" cb="0"/><line nr="455" mi="4" ci="0" mb="0" cb="0"/><line nr="456" mi="2" ci="0" mb="2" cb="0"/><line nr="457" mi="4" ci="0" mb="0" cb="0"/><line nr="459" mi="2" ci="0" mb="0" cb="0"/><line nr="464" mi="4" ci="0" mb="0" cb="0"/><line nr="465" mi="2" ci="0" mb="2" cb="0"/><line nr="466" mi="3" ci="0" mb="0" cb="0"/><line nr="467" mi="5" ci="0" mb="0" cb="0"/><line nr="468" mi="7" ci="0" mb="2" cb="0"/><line nr="469" mi="6" ci="0" mb="0" cb="0"/><line nr="471" mi="2" ci="0" mb="0" cb="0"/><line nr="473" mi="2" ci="0" mb="0" cb="0"/><line nr="478" mi="5" ci="0" mb="0" cb="0"/><line nr="483" mi="4" ci="0" mb="0" cb="0"/><line nr="484" mi="2" ci="0" mb="2" cb="0"/><line nr="485" mi="4" ci="0" mb="0" cb="0"/><line nr="487" mi="2" ci="0" mb="0" cb="0"/><line nr="492" mi="5" ci="0" mb="0" cb="0"/><line nr="497" mi="4" ci="0" mb="0" cb="0"/><line nr="498" mi="2" ci="0" mb="2" cb="0"/><line nr="499" mi="4" ci="0" mb="0" cb="0"/><line nr="501" mi="2" ci="0" mb="0" cb="0"/><line nr="506" mi="4" ci="0" mb="0" cb="0"/><line nr="507" mi="2" ci="0" mb="2" cb="0"/><line nr="508" mi="3" ci="0" mb="0" cb="0"/><line nr="509" mi="5" ci="0" mb="0" cb="0"/><line nr="510" mi="7" ci="0" mb="2" cb="0"/><line nr="511" mi="6" ci="0" mb="0" cb="0"/><line nr="513" mi="2" ci="0" mb="0" cb="0"/><line nr="515" mi="2" ci="0" mb="0" cb="0"/><line nr="520" mi="5" ci="0" mb="0" cb="0"/><line nr="525" mi="4" ci="0" mb="0" cb="0"/><line nr="526" mi="2" ci="0" mb="2" cb="0"/><line nr="527" mi="4" ci="0" mb="0" cb="0"/><line nr="529" mi="2" ci="0" mb="0" cb="0"/><line nr="534" mi="5" ci="0" mb="0" cb="0"/><line nr="539" mi="4" ci="0" mb="0" cb="0"/><line nr="540" mi="2" ci="0" mb="2" cb="0"/><line nr="541" mi="4" ci="0" mb="0" cb="0"/><line nr="543" mi="2" ci="0" mb="0" cb="0"/><line nr="548" mi="4" ci="0" mb="0" cb="0"/><line nr="549" mi="2" ci="0" mb="2" cb="0"/><line nr="550" mi="3" ci="0" mb="0" cb="0"/><line nr="551" mi="5" ci="0" mb="0" cb="0"/><line nr="552" mi="7" ci="0" mb="2" cb="0"/><line nr="553" mi="6" ci="0" mb="0" cb="0"/><line nr="555" mi="2" ci="0" mb="0" cb="0"/><line nr="557" mi="2" ci="0" mb="0" cb="0"/><line nr="562" mi="5" ci="0" mb="0" cb="0"/><line nr="567" mi="4" ci="0" mb="0" cb="0"/><line nr="568" mi="2" ci="0" mb="2" cb="0"/><line nr="569" mi="4" ci="0" mb="0" cb="0"/><line nr="571" mi="2" ci="0" mb="0" cb="0"/><line nr="576" mi="5" ci="0" mb="0" cb="0"/><line nr="581" mi="4" ci="0" mb="0" cb="0"/><line nr="582" mi="2" ci="0" mb="2" cb="0"/><line nr="583" mi="4" ci="0" mb="0" cb="0"/><line nr="585" mi="2" ci="0" mb="0" cb="0"/><line nr="590" mi="4" ci="0" mb="0" cb="0"/><line nr="591" mi="2" ci="0" mb="2" cb="0"/><line nr="592" mi="3" ci="0" mb="0" cb="0"/><line nr="593" mi="5" ci="0" mb="0" cb="0"/><line nr="594" mi="7" ci="0" mb="2" cb="0"/><line nr="595" mi="6" ci="0" mb="0" cb="0"/><line nr="597" mi="2" ci="0" mb="0" cb="0"/><line nr="599" mi="2" ci="0" mb="0" cb="0"/><line nr="604" mi="5" ci="0" mb="0" cb="0"/><line nr="609" mi="4" ci="0" mb="0" cb="0"/><line nr="610" mi="2" ci="0" mb="2" cb="0"/><line nr="611" mi="4" ci="0" mb="0" cb="0"/><line nr="613" mi="2" ci="0" mb="0" cb="0"/><line nr="618" mi="5" ci="0" mb="0" cb="0"/><line nr="623" mi="4" ci="0" mb="0" cb="0"/><line nr="624" mi="2" ci="0" mb="2" cb="0"/><line nr="625" mi="4" ci="0" mb="0" cb="0"/><line nr="627" mi="2" ci="0" mb="0" cb="0"/><line nr="632" mi="4" ci="0" mb="0" cb="0"/><line nr="633" mi="2" ci="0" mb="2" cb="0"/><line nr="634" mi="3" ci="0" mb="0" cb="0"/><line nr="635" mi="5" ci="0" mb="0" cb="0"/><line nr="636" mi="7" ci="0" mb="2" cb="0"/><line nr="637" mi="6" ci="0" mb="0" cb="0"/><line nr="639" mi="2" ci="0" mb="0" cb="0"/><line nr="641" mi="2" ci="0" mb="0" cb="0"/><line nr="646" mi="4" ci="0" mb="0" cb="0"/><line nr="647" mi="2" ci="0" mb="2" cb="0"/><line nr="648" mi="4" ci="0" mb="0" cb="0"/><line nr="650" mi="2" ci="0" mb="0" cb="0"/><line nr="655" mi="4" ci="0" mb="0" cb="0"/><line nr="656" mi="2" ci="0" mb="2" cb="0"/><line nr="657" mi="4" ci="0" mb="0" cb="0"/><line nr="659" mi="2" ci="0" mb="0" cb="0"/><line nr="664" mi="4" ci="0" mb="0" cb="0"/><line nr="665" mi="2" ci="0" mb="2" cb="0"/><line nr="666" mi="4" ci="0" mb="0" cb="0"/><line nr="668" mi="2" ci="0" mb="0" cb="0"/><line nr="673" mi="4" ci="0" mb="0" cb="0"/><line nr="674" mi="2" ci="0" mb="2" cb="0"/><line nr="675" mi="4" ci="0" mb="0" cb="0"/><line nr="677" mi="2" ci="0" mb="0" cb="0"/><line nr="682" mi="4" ci="0" mb="0" cb="0"/><line nr="683" mi="2" ci="0" mb="2" cb="0"/><line nr="684" mi="3" ci="0" mb="0" cb="0"/><line nr="685" mi="5" ci="0" mb="0" cb="0"/><line nr="686" mi="7" ci="0" mb="2" cb="0"/><line nr="687" mi="6" ci="0" mb="0" cb="0"/><line nr="689" mi="2" ci="0" mb="0" cb="0"/><line nr="691" mi="2" ci="0" mb="0" cb="0"/><line nr="696" mi="5" ci="0" mb="2" cb="0"/><line nr="697" mi="2" ci="0" mb="0" cb="0"/><line nr="699" mi="8" ci="0" mb="2" cb="0"/><line nr="700" mi="2" ci="0" mb="0" cb="0"/><line nr="702" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1015" covered="0"/><counter type="BRANCH" missed="126" covered="0"/><counter type="LINE" missed="283" covered="0"/><counter type="COMPLEXITY" missed="143" covered="0"/><counter type="METHOD" missed="80" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultPlcUnsubscriptionResponse.java"><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultPlcWriteResponse.java"><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultPlcProprietaryRequest.java"><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PlcRawMessage.java"><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultPlcWriteRequest.java"><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="8" ci="0" mb="0" cb="0"/><line nr="64" mi="11" ci="0" mb="0" cb="0"/><line nr="68" mi="8" ci="0" mb="0" cb="0"/><line nr="73" mi="11" ci="0" mb="0" cb="0"/><line nr="78" mi="9" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="10" ci="0" mb="0" cb="0"/><line nr="92" mi="10" ci="0" mb="0" cb="0"/><line nr="93" mi="10" ci="0" mb="0" cb="0"/><line nr="94" mi="10" ci="0" mb="0" cb="0"/><line nr="95" mi="10" ci="0" mb="0" cb="0"/><line nr="96" mi="10" ci="0" mb="0" cb="0"/><line nr="97" mi="10" ci="0" mb="0" cb="0"/><line nr="98" mi="10" ci="0" mb="0" cb="0"/><line nr="99" mi="10" ci="0" mb="0" cb="0"/><line nr="100" mi="10" ci="0" mb="0" cb="0"/><line nr="101" mi="10" ci="0" mb="0" cb="0"/><line nr="102" mi="10" ci="0" mb="0" cb="0"/><line nr="103" mi="10" ci="0" mb="0" cb="0"/><line nr="104" mi="10" ci="0" mb="0" cb="0"/><line nr="105" mi="10" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="12" ci="0" mb="0" cb="0"/><line nr="115" mi="12" ci="0" mb="0" cb="0"/><line nr="120" mi="12" ci="0" mb="0" cb="0"/><line nr="125" mi="12" ci="0" mb="0" cb="0"/><line nr="130" mi="12" ci="0" mb="0" cb="0"/><line nr="135" mi="12" ci="0" mb="0" cb="0"/><line nr="140" mi="12" ci="0" mb="0" cb="0"/><line nr="145" mi="12" ci="0" mb="0" cb="0"/><line nr="150" mi="12" ci="0" mb="0" cb="0"/><line nr="155" mi="12" ci="0" mb="0" cb="0"/><line nr="160" mi="12" ci="0" mb="0" cb="0"/><line nr="165" mi="12" ci="0" mb="0" cb="0"/><line nr="170" mi="12" ci="0" mb="0" cb="0"/><line nr="175" mi="12" ci="0" mb="0" cb="0"/><line nr="180" mi="12" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="16" ci="0" mb="2" cb="0"/><line nr="188" mi="2" ci="0" mb="2" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="4" ci="0" mb="2" cb="0"/><line nr="192" mi="17" ci="0" mb="0" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="2" cb="0"/><line nr="197" mi="14" ci="0" mb="0" cb="0"/><line nr="199" mi="7" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="6" ci="0" mb="0" cb="0"/><line nr="207" mi="6" ci="0" mb="0" cb="0"/><line nr="210" mi="8" ci="0" mb="0" cb="0"/><line nr="211" mi="9" ci="0" mb="0" cb="0"/><line nr="212" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="6" ci="0" mb="0" cb="0"/><line nr="217" mi="5" ci="0" mb="2" cb="0"/><line nr="218" mi="14" ci="0" mb="0" cb="0"/><line nr="220" mi="12" ci="0" mb="0" cb="0"/><line nr="221" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="3" ci="0" mb="0" cb="0"/><line nr="231" mi="3" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="0" cb="0"/><line nr="233" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="571" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="72" covered="0"/><counter type="COMPLEXITY" missed="34" covered="0"/><counter type="METHOD" missed="29" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="DefaultPlcSubscriptionRequest.java"><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="94" mi="9" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="PlcRequestContainer.java"><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="12" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="2"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="11" mb="1" cb="1"/><line nr="79" mi="1" ci="4" mb="1" cb="1"/><line nr="84" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="79"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultPlcSubscriptionEvent.java"><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="2" ci="0" mb="0" cb="0"/><line nr="253" mi="2" ci="0" mb="0" cb="0"/><line nr="258" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="268" mi="2" ci="0" mb="0" cb="0"/><line nr="273" mi="2" ci="0" mb="0" cb="0"/><line nr="278" mi="2" ci="0" mb="0" cb="0"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="288" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="2" ci="0" mb="0" cb="0"/><line nr="298" mi="2" ci="0" mb="0" cb="0"/><line nr="303" mi="2" ci="0" mb="0" cb="0"/><line nr="308" mi="2" ci="0" mb="0" cb="0"/><line nr="313" mi="2" ci="0" mb="0" cb="0"/><line nr="318" mi="2" ci="0" mb="0" cb="0"/><line nr="323" mi="2" ci="0" mb="0" cb="0"/><line nr="328" mi="2" ci="0" mb="0" cb="0"/><line nr="333" mi="2" ci="0" mb="0" cb="0"/><line nr="338" mi="2" ci="0" mb="0" cb="0"/><line nr="343" mi="2" ci="0" mb="0" cb="0"/><line nr="348" mi="2" ci="0" mb="0" cb="0"/><line nr="353" mi="2" ci="0" mb="0" cb="0"/><line nr="358" mi="2" ci="0" mb="0" cb="0"/><line nr="363" mi="2" ci="0" mb="0" cb="0"/><line nr="368" mi="2" ci="0" mb="0" cb="0"/><line nr="373" mi="2" ci="0" mb="0" cb="0"/><line nr="378" mi="2" ci="0" mb="0" cb="0"/><line nr="383" mi="2" ci="0" mb="0" cb="0"/><line nr="388" mi="2" ci="0" mb="0" cb="0"/><line nr="393" mi="2" ci="0" mb="0" cb="0"/><line nr="398" mi="3" ci="0" mb="0" cb="0"/><line nr="403" mi="3" ci="0" mb="0" cb="0"/><line nr="408" mi="2" ci="0" mb="0" cb="0"/><line nr="413" mi="2" ci="0" mb="0" cb="0"/><line nr="418" mi="2" ci="0" mb="0" cb="0"/><line nr="423" mi="2" ci="0" mb="0" cb="0"/><line nr="428" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="161" covered="0"/><counter type="LINE" missed="80" covered="0"/><counter type="COMPLEXITY" missed="79" covered="0"/><counter type="METHOD" missed="79" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultPlcSubscriptionResponse.java"><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="8" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultPlcReadRequest.java"><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="7" ci="0" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="2" cb="0"/><line nr="70" mi="14" ci="0" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="DefaultPlcUnsubscriptionRequest.java"><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="15" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="15" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="DefaultPlcProprietaryResponse.java"><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="2139" covered="79"/><counter type="BRANCH" missed="140" covered="6"/><counter type="LINE" missed="540" covered="18"/><counter type="COMPLEXITY" missed="318" covered="9"/><counter type="METHOD" missed="247" covered="7"/><counter type="CLASS" missed="18" covered="1"/></package><package name="org/apache/plc4x/java/base/connection"><class name="org/apache/plc4x/java/base/connection/DefaultPlcFieldHandler"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeBoolean" desc="(Lorg/apache/plc4x/java/api/model/PlcField;[Ljava/lang/Object;)Lorg/apache/plc4x/java/base/messages/items/FieldItem;" line="30"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeByte" desc="(Lorg/apache/plc4x/java/api/model/PlcField;[Ljava/lang/Object;)Lorg/apache/plc4x/java/base/messages/items/FieldItem;" line="35"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeShort" desc="(Lorg/apache/plc4x/java/api/model/PlcField;[Ljava/lang/Object;)Lorg/apache/plc4x/java/base/messages/items/FieldItem;" line="40"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeInteger" desc="(Lorg/apache/plc4x/java/api/model/PlcField;[Ljava/lang/Object;)Lorg/apache/plc4x/java/base/messages/items/FieldItem;" line="45"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeBigInteger" desc="(Lorg/apache/plc4x/java/api/model/PlcField;[Ljava/lang/Object;)Lorg/apache/plc4x/java/base/messages/items/FieldItem;" line="50"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeLong" desc="(Lorg/apache/plc4x/java/api/model/PlcField;[Ljava/lang/Object;)Lorg/apache/plc4x/java/base/messages/items/FieldItem;" line="55"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeFloat" desc="(Lorg/apache/plc4x/java/api/model/PlcField;[Ljava/lang/Object;)Lorg/apache/plc4x/java/base/messages/items/FieldItem;" line="60"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeBigDecimal" desc="(Lorg/apache/plc4x/java/api/model/PlcField;[Ljava/lang/Object;)Lorg/apache/plc4x/java/base/messages/items/FieldItem;" line="65"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeDouble" desc="(Lorg/apache/plc4x/java/api/model/PlcField;[Ljava/lang/Object;)Lorg/apache/plc4x/java/base/messages/items/FieldItem;" line="70"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeString" desc="(Lorg/apache/plc4x/java/api/model/PlcField;[Ljava/lang/Object;)Lorg/apache/plc4x/java/base/messages/items/FieldItem;" line="75"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeTime" desc="(Lorg/apache/plc4x/java/api/model/PlcField;[Ljava/lang/Object;)Lorg/apache/plc4x/java/base/messages/items/FieldItem;" line="80"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeDate" desc="(Lorg/apache/plc4x/java/api/model/PlcField;[Ljava/lang/Object;)Lorg/apache/plc4x/java/base/messages/items/FieldItem;" line="85"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeDateTime" desc="(Lorg/apache/plc4x/java/api/model/PlcField;[Ljava/lang/Object;)Lorg/apache/plc4x/java/base/messages/items/FieldItem;" line="90"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeByteArray" desc="(Lorg/apache/plc4x/java/api/model/PlcField;[Ljava/lang/Object;)Lorg/apache/plc4x/java/base/messages/items/FieldItem;" line="95"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="171" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/connection/AbstractPlcConnection"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/base/connection/ChannelFactory;)V" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/base/connection/ChannelFactory;Z)V" line="46"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="connect" desc="()V" line="58"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="88"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConnected" desc="()Z" line="94"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChannel" desc="()Lio/netty/channel/Channel;" line="98"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sendChannelCreatedEvent" desc="()V" line="105"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReader" desc="()Ljava/util/Optional;" line="109"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWriter" desc="()Ljava/util/Optional;" line="117"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubscriber" desc="()Ljava/util/Optional;" line="125"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkInternal" desc="(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;" line="140"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$connect$0" desc="(Ljava/util/concurrent/CompletableFuture;Lio/netty/util/concurrent/Future;)V" line="63"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="146" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="AbstractPlcConnection.java"><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="2" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="2" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="2" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="2" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="2" cb="0"/><line nr="143" mi="17" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="146" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultPlcFieldHandler.java"><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="12" ci="0" mb="0" cb="0"/><line nr="35" mi="12" ci="0" mb="0" cb="0"/><line nr="40" mi="12" ci="0" mb="0" cb="0"/><line nr="45" mi="12" ci="0" mb="0" cb="0"/><line nr="50" mi="12" ci="0" mb="0" cb="0"/><line nr="55" mi="12" ci="0" mb="0" cb="0"/><line nr="60" mi="12" ci="0" mb="0" cb="0"/><line nr="65" mi="12" ci="0" mb="0" cb="0"/><line nr="70" mi="12" ci="0" mb="0" cb="0"/><line nr="75" mi="12" ci="0" mb="0" cb="0"/><line nr="80" mi="12" ci="0" mb="0" cb="0"/><line nr="85" mi="12" ci="0" mb="0" cb="0"/><line nr="90" mi="12" ci="0" mb="0" cb="0"/><line nr="95" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="171" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="317" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="59" covered="0"/><counter type="COMPLEXITY" missed="33" covered="0"/><counter type="METHOD" missed="27" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="org/apache/plc4x/java/base/messages/items"><class name="org/apache/plc4x/java/base/messages/items/DefaultShortFieldItem"><method name="&lt;init&gt;" desc="([Ljava/lang/Short;)V" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(I)Ljava/lang/Object;" line="32"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBoolean" desc="(I)Z" line="37"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(I)Ljava/lang/Boolean;" line="42"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByte" desc="(I)Z" line="50"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByte" desc="(I)Ljava/lang/Byte;" line="56"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidShort" desc="(I)Z" line="64"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShort" desc="(I)Ljava/lang/Short;" line="70"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidInteger" desc="(I)Z" line="78"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInteger" desc="(I)Ljava/lang/Integer;" line="84"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigInteger" desc="(I)Z" line="91"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigInteger" desc="(I)Ljava/math/BigInteger;" line="96"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidLong" desc="(I)Z" line="104"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(I)Ljava/lang/Long;" line="109"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidFloat" desc="(I)Z" line="117"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(I)Ljava/lang/Float;" line="123"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDouble" desc="(I)Z" line="131"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(I)Ljava/lang/Double;" line="137"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigDecimal" desc="(I)Z" line="144"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigDecimal" desc="(I)Ljava/math/BigDecimal;" line="148"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="249" covered="0"/><counter type="BRANCH" missed="48" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="44" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/items/DefaultLocalDateTimeFieldItem"><method name="&lt;init&gt;" desc="([Ljava/time/LocalDateTime;)V" line="28"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(I)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidTime" desc="(I)Z" line="38"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTime" desc="(I)Ljava/time/LocalTime;" line="43"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDate" desc="(I)Z" line="51"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDate" desc="(I)Ljava/time/LocalDate;" line="56"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDateTime" desc="(I)Z" line="64"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDateTime" desc="(I)Ljava/time/LocalDateTime;" line="69"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/items/DefaultBigIntegerFieldItem"><method name="&lt;init&gt;" desc="([Ljava/math/BigInteger;)V" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(I)Ljava/lang/Object;" line="32"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBoolean" desc="(I)Z" line="37"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(I)Ljava/lang/Boolean;" line="42"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByte" desc="(I)Z" line="50"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByte" desc="(I)Ljava/lang/Byte;" line="57"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidShort" desc="(I)Z" line="65"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShort" desc="(I)Ljava/lang/Short;" line="72"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidInteger" desc="(I)Z" line="80"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInteger" desc="(I)Ljava/lang/Integer;" line="87"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigInteger" desc="(I)Z" line="95"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigInteger" desc="(I)Ljava/math/BigInteger;" line="100"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidLong" desc="(I)Z" line="108"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(I)Ljava/lang/Long;" line="115"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidFloat" desc="(I)Z" line="124"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(I)Ljava/lang/Float;" line="135"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDouble" desc="(I)Z" line="143"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(I)Ljava/lang/Double;" line="154"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigDecimal" desc="(I)Z" line="161"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigDecimal" desc="(I)Ljava/math/BigDecimal;" line="165"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="294" covered="0"/><counter type="BRANCH" missed="60" covered="0"/><counter type="LINE" missed="58" covered="0"/><counter type="COMPLEXITY" missed="50" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/items/DefaultFloatFieldItem"><method name="&lt;init&gt;" desc="([Ljava/lang/Float;)V" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(I)Ljava/lang/Object;" line="32"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBoolean" desc="(I)Z" line="37"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(I)Ljava/lang/Boolean;" line="42"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByte" desc="(I)Z" line="50"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByte" desc="(I)Ljava/lang/Byte;" line="56"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidShort" desc="(I)Z" line="64"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShort" desc="(I)Ljava/lang/Short;" line="70"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidInteger" desc="(I)Z" line="78"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInteger" desc="(I)Ljava/lang/Integer;" line="84"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigInteger" desc="(I)Z" line="91"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigInteger" desc="(I)Ljava/math/BigInteger;" line="96"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidLong" desc="(I)Z" line="104"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(I)Ljava/lang/Long;" line="110"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidFloat" desc="(I)Z" line="118"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(I)Ljava/lang/Float;" line="124"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDouble" desc="(I)Z" line="132"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(I)Ljava/lang/Double;" line="137"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigDecimal" desc="(I)Z" line="144"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigDecimal" desc="(I)Ljava/math/BigDecimal;" line="148"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="266" covered="0"/><counter type="BRANCH" missed="56" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="48" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/items/DefaultByteArrayFieldItem"><method name="&lt;init&gt;" desc="([[Ljava/lang/Byte;)V" line="24"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(I)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByteArray" desc="(I)Z" line="33"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByteArray" desc="(I)[Ljava/lang/Byte;" line="38"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/items/DefaultBigDecimalFieldItem"><method name="&lt;init&gt;" desc="([Ljava/math/BigDecimal;)V" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(I)Ljava/lang/Object;" line="32"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBoolean" desc="(I)Z" line="37"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(I)Ljava/lang/Boolean;" line="42"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByte" desc="(I)Z" line="50"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByte" desc="(I)Ljava/lang/Byte;" line="58"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidShort" desc="(I)Z" line="66"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShort" desc="(I)Ljava/lang/Short;" line="74"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidInteger" desc="(I)Z" line="82"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInteger" desc="(I)Ljava/lang/Integer;" line="90"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigInteger" desc="(I)Z" line="97"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigInteger" desc="(I)Ljava/math/BigInteger;" line="102"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidLong" desc="(I)Z" line="110"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(I)Ljava/lang/Long;" line="118"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidFloat" desc="(I)Z" line="126"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(I)Ljava/lang/Float;" line="134"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDouble" desc="(I)Z" line="142"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(I)Ljava/lang/Double;" line="150"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigDecimal" desc="(I)Z" line="157"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigDecimal" desc="(I)Ljava/math/BigDecimal;" line="161"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="298" covered="0"/><counter type="BRANCH" missed="60" covered="0"/><counter type="LINE" missed="56" covered="0"/><counter type="COMPLEXITY" missed="50" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/items/DefaultLongFieldItem"><method name="&lt;init&gt;" desc="([Ljava/lang/Long;)V" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(I)Ljava/lang/Object;" line="32"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBoolean" desc="(I)Z" line="37"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(I)Ljava/lang/Boolean;" line="42"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByte" desc="(I)Z" line="50"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByte" desc="(I)Ljava/lang/Byte;" line="56"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidShort" desc="(I)Z" line="64"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShort" desc="(I)Ljava/lang/Short;" line="70"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidInteger" desc="(I)Z" line="78"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInteger" desc="(I)Ljava/lang/Integer;" line="84"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigInteger" desc="(I)Z" line="91"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigInteger" desc="(I)Ljava/math/BigInteger;" line="96"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidLong" desc="(I)Z" line="104"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(I)Ljava/lang/Long;" line="109"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidFloat" desc="(I)Z" line="117"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(I)Ljava/lang/Float;" line="123"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDouble" desc="(I)Z" line="131"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(I)Ljava/lang/Double;" line="137"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigDecimal" desc="(I)Z" line="144"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigDecimal" desc="(I)Ljava/math/BigDecimal;" line="148"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="269" covered="0"/><counter type="BRANCH" missed="56" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="48" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/items/DefaultLocalDateFieldItem"><method name="&lt;init&gt;" desc="([Ljava/time/LocalDate;)V" line="26"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(I)Ljava/lang/Object;" line="31"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDate" desc="(I)Z" line="36"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDate" desc="(I)Ljava/time/LocalDate;" line="41"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/items/DefaultByteFieldItem"><method name="&lt;init&gt;" desc="([Ljava/lang/Byte;)V" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(I)Ljava/lang/Object;" line="32"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBoolean" desc="(I)Z" line="37"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(I)Ljava/lang/Boolean;" line="42"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByte" desc="(I)Z" line="50"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByte" desc="(I)Ljava/lang/Byte;" line="56"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidShort" desc="(I)Z" line="64"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShort" desc="(I)Ljava/lang/Short;" line="70"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidInteger" desc="(I)Z" line="78"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInteger" desc="(I)Ljava/lang/Integer;" line="84"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigInteger" desc="(I)Z" line="91"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigInteger" desc="(I)Ljava/math/BigInteger;" line="96"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidLong" desc="(I)Z" line="104"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(I)Ljava/lang/Long;" line="109"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidFloat" desc="(I)Z" line="117"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(I)Ljava/lang/Float;" line="123"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDouble" desc="(I)Z" line="131"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(I)Ljava/lang/Double;" line="137"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigDecimal" desc="(I)Z" line="144"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigDecimal" desc="(I)Ljava/math/BigDecimal;" line="148"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="241" covered="0"/><counter type="BRANCH" missed="44" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="42" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/items/DefaultStringFieldItem"><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V" line="24"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(I)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidString" desc="(I)Z" line="34"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getString" desc="(I)Ljava/lang/String;" line="39"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/items/DefaultLocalTimeFieldItem"><method name="&lt;init&gt;" desc="([Ljava/time/LocalTime;)V" line="26"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(I)Ljava/lang/Object;" line="31"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidTime" desc="(I)Z" line="36"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTime" desc="(I)Ljava/time/LocalTime;" line="41"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/items/FieldItem"><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="32"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOfValues" desc="()I" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBoolean" desc="(I)Z" line="43"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(I)Ljava/lang/Boolean;" line="47"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByte" desc="(I)Z" line="51"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByte" desc="(I)Ljava/lang/Byte;" line="55"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidShort" desc="(I)Z" line="59"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShort" desc="(I)Ljava/lang/Short;" line="63"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidInteger" desc="(I)Z" line="67"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInteger" desc="(I)Ljava/lang/Integer;" line="71"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigInteger" desc="(I)Z" line="75"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigInteger" desc="(I)Ljava/math/BigInteger;" line="79"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidLong" desc="(I)Z" line="83"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(I)Ljava/lang/Long;" line="87"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidFloat" desc="(I)Z" line="91"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(I)Ljava/lang/Float;" line="95"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDouble" desc="(I)Z" line="99"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(I)Ljava/lang/Double;" line="103"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigDecimal" desc="(I)Z" line="107"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigDecimal" desc="(I)Ljava/math/BigDecimal;" line="111"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidString" desc="(I)Z" line="115"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getString" desc="(I)Ljava/lang/String;" line="119"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidTime" desc="(I)Z" line="123"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTime" desc="(I)Ljava/time/LocalTime;" line="127"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDate" desc="(I)Z" line="131"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDate" desc="(I)Ljava/time/LocalDate;" line="135"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDateTime" desc="(I)Z" line="139"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDateTime" desc="(I)Ljava/time/LocalDateTime;" line="143"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByteArray" desc="(I)Z" line="147"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByteArray" desc="(I)[Ljava/lang/Byte;" line="151"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValues" desc="()[Ljava/lang/Object;" line="155"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="(I)Ljava/lang/Object;" line="159"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="167"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="179"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="184"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="119" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="45" covered="0"/><counter type="COMPLEXITY" missed="39" covered="0"/><counter type="METHOD" missed="35" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/items/DefaultIntegerFieldItem"><method name="&lt;init&gt;" desc="([Ljava/lang/Integer;)V" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(I)Ljava/lang/Object;" line="32"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBoolean" desc="(I)Z" line="37"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(I)Ljava/lang/Boolean;" line="42"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByte" desc="(I)Z" line="50"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByte" desc="(I)Ljava/lang/Byte;" line="56"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidShort" desc="(I)Z" line="64"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShort" desc="(I)Ljava/lang/Short;" line="70"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidInteger" desc="(I)Z" line="78"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInteger" desc="(I)Ljava/lang/Integer;" line="84"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigInteger" desc="(I)Z" line="91"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigInteger" desc="(I)Ljava/math/BigInteger;" line="96"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidLong" desc="(I)Z" line="104"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(I)Ljava/lang/Long;" line="109"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidFloat" desc="(I)Z" line="117"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(I)Ljava/lang/Float;" line="123"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDouble" desc="(I)Z" line="131"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(I)Ljava/lang/Double;" line="137"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigDecimal" desc="(I)Z" line="144"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigDecimal" desc="(I)Ljava/math/BigDecimal;" line="148"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="257" covered="0"/><counter type="BRANCH" missed="52" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="46" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/items/DefaultDoubleFieldItem"><method name="&lt;init&gt;" desc="([Ljava/lang/Double;)V" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(I)Ljava/lang/Object;" line="32"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBoolean" desc="(I)Z" line="37"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(I)Ljava/lang/Boolean;" line="42"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByte" desc="(I)Z" line="50"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByte" desc="(I)Ljava/lang/Byte;" line="56"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidShort" desc="(I)Z" line="64"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShort" desc="(I)Ljava/lang/Short;" line="70"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidInteger" desc="(I)Z" line="78"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInteger" desc="(I)Ljava/lang/Integer;" line="84"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigInteger" desc="(I)Z" line="91"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigInteger" desc="(I)Ljava/math/BigInteger;" line="96"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidLong" desc="(I)Z" line="104"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(I)Ljava/lang/Long;" line="110"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidFloat" desc="(I)Z" line="118"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFloat" desc="(I)Ljava/lang/Float;" line="124"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDouble" desc="(I)Z" line="132"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(I)Ljava/lang/Double;" line="137"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigDecimal" desc="(I)Z" line="144"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBigDecimal" desc="(I)Ljava/math/BigDecimal;" line="148"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="265" covered="0"/><counter type="BRANCH" missed="56" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="48" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/messages/items/DefaultBooleanFieldItem"><method name="&lt;init&gt;" desc="([Ljava/lang/Boolean;)V" line="26"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObject" desc="(I)Ljava/lang/Object;" line="31"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBoolean" desc="(I)Z" line="36"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(I)Ljava/lang/Boolean;" line="41"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByte" desc="(I)Z" line="49"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByte" desc="(I)Ljava/lang/Byte;" line="55"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="DefaultByteArrayFieldItem.java"><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="6" ci="0" mb="2" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultByteFieldItem.java"><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="8" ci="0" mb="2" cb="0"/><line nr="42" mi="4" ci="0" mb="2" cb="0"/><line nr="43" mi="14" ci="0" mb="2" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="2" cb="0"/><line nr="56" mi="4" ci="0" mb="2" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="2" cb="0"/><line nr="70" mi="4" ci="0" mb="2" cb="0"/><line nr="71" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="2" cb="0"/><line nr="84" mi="4" ci="0" mb="2" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="2" cb="0"/><line nr="96" mi="4" ci="0" mb="2" cb="0"/><line nr="97" mi="8" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="2" cb="0"/><line nr="109" mi="4" ci="0" mb="2" cb="0"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="18" ci="0" mb="6" cb="0"/><line nr="123" mi="4" ci="0" mb="2" cb="0"/><line nr="124" mi="7" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="18" ci="0" mb="6" cb="0"/><line nr="137" mi="4" ci="0" mb="2" cb="0"/><line nr="138" mi="7" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="2" cb="0"/><line nr="148" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="241" covered="0"/><counter type="BRANCH" missed="44" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="42" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultIntegerFieldItem.java"><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="8" ci="0" mb="2" cb="0"/><line nr="42" mi="4" ci="0" mb="2" cb="0"/><line nr="43" mi="14" ci="0" mb="2" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="14" ci="0" mb="6" cb="0"/><line nr="56" mi="4" ci="0" mb="2" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="14" ci="0" mb="6" cb="0"/><line nr="70" mi="4" ci="0" mb="2" cb="0"/><line nr="71" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="2" cb="0"/><line nr="84" mi="4" ci="0" mb="2" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="2" cb="0"/><line nr="96" mi="4" ci="0" mb="2" cb="0"/><line nr="97" mi="8" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="2" cb="0"/><line nr="109" mi="4" ci="0" mb="2" cb="0"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="18" ci="0" mb="6" cb="0"/><line nr="123" mi="4" ci="0" mb="2" cb="0"/><line nr="124" mi="7" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="18" ci="0" mb="6" cb="0"/><line nr="137" mi="4" ci="0" mb="2" cb="0"/><line nr="138" mi="7" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="2" cb="0"/><line nr="148" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="257" covered="0"/><counter type="BRANCH" missed="52" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="46" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultFloatFieldItem.java"><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="8" ci="0" mb="2" cb="0"/><line nr="42" mi="4" ci="0" mb="2" cb="0"/><line nr="43" mi="13" ci="0" mb="2" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="16" ci="0" mb="6" cb="0"/><line nr="56" mi="4" ci="0" mb="2" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="16" ci="0" mb="6" cb="0"/><line nr="70" mi="4" ci="0" mb="2" cb="0"/><line nr="71" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="16" ci="0" mb="6" cb="0"/><line nr="84" mi="4" ci="0" mb="2" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="2" cb="0"/><line nr="96" mi="4" ci="0" mb="2" cb="0"/><line nr="97" mi="7" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="16" ci="0" mb="6" cb="0"/><line nr="110" mi="4" ci="0" mb="2" cb="0"/><line nr="111" mi="7" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="16" ci="0" mb="6" cb="0"/><line nr="124" mi="4" ci="0" mb="2" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="8" ci="0" mb="2" cb="0"/><line nr="137" mi="4" ci="0" mb="2" cb="0"/><line nr="138" mi="7" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="2" cb="0"/><line nr="148" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="266" covered="0"/><counter type="BRANCH" missed="56" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="48" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultLocalDateFieldItem.java"><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="2" cb="0"/><line nr="41" mi="4" ci="0" mb="2" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FieldItem.java"><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="7" ci="0" mb="4" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="2" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="2" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="6" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="8" ci="0" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="119" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="45" covered="0"/><counter type="COMPLEXITY" missed="39" covered="0"/><counter type="METHOD" missed="35" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultDoubleFieldItem.java"><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="8" ci="0" mb="2" cb="0"/><line nr="42" mi="4" ci="0" mb="2" cb="0"/><line nr="43" mi="13" ci="0" mb="2" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="16" ci="0" mb="6" cb="0"/><line nr="56" mi="4" ci="0" mb="2" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="16" ci="0" mb="6" cb="0"/><line nr="70" mi="4" ci="0" mb="2" cb="0"/><line nr="71" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="16" ci="0" mb="6" cb="0"/><line nr="84" mi="4" ci="0" mb="2" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="2" cb="0"/><line nr="96" mi="4" ci="0" mb="2" cb="0"/><line nr="97" mi="7" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="16" ci="0" mb="6" cb="0"/><line nr="110" mi="4" ci="0" mb="2" cb="0"/><line nr="111" mi="7" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="16" ci="0" mb="6" cb="0"/><line nr="124" mi="4" ci="0" mb="2" cb="0"/><line nr="125" mi="7" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="8" ci="0" mb="2" cb="0"/><line nr="137" mi="4" ci="0" mb="2" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="2" cb="0"/><line nr="148" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="265" covered="0"/><counter type="BRANCH" missed="56" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="48" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultLongFieldItem.java"><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="8" ci="0" mb="2" cb="0"/><line nr="42" mi="4" ci="0" mb="2" cb="0"/><line nr="43" mi="13" ci="0" mb="2" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="16" ci="0" mb="6" cb="0"/><line nr="56" mi="4" ci="0" mb="2" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="16" ci="0" mb="6" cb="0"/><line nr="70" mi="4" ci="0" mb="2" cb="0"/><line nr="71" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="16" ci="0" mb="6" cb="0"/><line nr="84" mi="4" ci="0" mb="2" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="2" cb="0"/><line nr="96" mi="4" ci="0" mb="2" cb="0"/><line nr="97" mi="7" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="2" cb="0"/><line nr="109" mi="4" ci="0" mb="2" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="18" ci="0" mb="6" cb="0"/><line nr="123" mi="4" ci="0" mb="2" cb="0"/><line nr="124" mi="7" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="18" ci="0" mb="6" cb="0"/><line nr="137" mi="4" ci="0" mb="2" cb="0"/><line nr="138" mi="7" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="2" cb="0"/><line nr="148" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="269" covered="0"/><counter type="BRANCH" missed="56" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="48" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultLocalTimeFieldItem.java"><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="2" cb="0"/><line nr="41" mi="4" ci="0" mb="2" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultBooleanFieldItem.java"><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="2" cb="0"/><line nr="41" mi="4" ci="0" mb="2" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="8" ci="0" mb="2" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="18" ci="0" mb="2" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="2" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultLocalDateTimeFieldItem.java"><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="8" ci="0" mb="2" cb="0"/><line nr="43" mi="4" ci="0" mb="2" cb="0"/><line nr="44" mi="6" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="8" ci="0" mb="2" cb="0"/><line nr="56" mi="4" ci="0" mb="2" cb="0"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="2" cb="0"/><line nr="69" mi="4" ci="0" mb="2" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultBigDecimalFieldItem.java"><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="8" ci="0" mb="2" cb="0"/><line nr="42" mi="4" ci="0" mb="2" cb="0"/><line nr="43" mi="12" ci="0" mb="2" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="14" ci="0" mb="6" cb="0"/><line nr="58" mi="4" ci="0" mb="2" cb="0"/><line nr="59" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="14" ci="0" mb="6" cb="0"/><line nr="74" mi="4" ci="0" mb="2" cb="0"/><line nr="75" mi="7" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="14" ci="0" mb="6" cb="0"/><line nr="90" mi="4" ci="0" mb="2" cb="0"/><line nr="91" mi="7" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="2" cb="0"/><line nr="102" mi="4" ci="0" mb="2" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="14" ci="0" mb="6" cb="0"/><line nr="118" mi="4" ci="0" mb="2" cb="0"/><line nr="119" mi="7" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="14" ci="0" mb="6" cb="0"/><line nr="134" mi="4" ci="0" mb="2" cb="0"/><line nr="135" mi="7" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="14" ci="0" mb="6" cb="0"/><line nr="150" mi="4" ci="0" mb="2" cb="0"/><line nr="151" mi="7" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="8" ci="0" mb="2" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="298" covered="0"/><counter type="BRANCH" missed="60" covered="0"/><counter type="LINE" missed="56" covered="0"/><counter type="COMPLEXITY" missed="50" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultBigIntegerFieldItem.java"><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="8" ci="0" mb="2" cb="0"/><line nr="42" mi="4" ci="0" mb="2" cb="0"/><line nr="43" mi="12" ci="0" mb="2" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="10" ci="0" mb="4" cb="0"/><line nr="52" mi="6" ci="0" mb="2" cb="0"/><line nr="57" mi="4" ci="0" mb="2" cb="0"/><line nr="58" mi="7" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="10" ci="0" mb="4" cb="0"/><line nr="67" mi="6" ci="0" mb="2" cb="0"/><line nr="72" mi="4" ci="0" mb="2" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="10" ci="0" mb="4" cb="0"/><line nr="82" mi="6" ci="0" mb="2" cb="0"/><line nr="87" mi="4" ci="0" mb="2" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="2" cb="0"/><line nr="100" mi="4" ci="0" mb="2" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="10" ci="0" mb="4" cb="0"/><line nr="110" mi="6" ci="0" mb="2" cb="0"/><line nr="115" mi="4" ci="0" mb="2" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="2" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="2" cb="0"/><line nr="130" mi="6" ci="0" mb="2" cb="0"/><line nr="135" mi="4" ci="0" mb="2" cb="0"/><line nr="136" mi="7" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="5" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="2" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="8" ci="0" mb="2" cb="0"/><line nr="149" mi="6" ci="0" mb="2" cb="0"/><line nr="154" mi="4" ci="0" mb="2" cb="0"/><line nr="155" mi="7" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="8" ci="0" mb="2" cb="0"/><line nr="165" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="294" covered="0"/><counter type="BRANCH" missed="60" covered="0"/><counter type="LINE" missed="58" covered="0"/><counter type="COMPLEXITY" missed="50" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultShortFieldItem.java"><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="8" ci="0" mb="2" cb="0"/><line nr="42" mi="4" ci="0" mb="2" cb="0"/><line nr="43" mi="14" ci="0" mb="2" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="14" ci="0" mb="6" cb="0"/><line nr="56" mi="4" ci="0" mb="2" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="2" cb="0"/><line nr="70" mi="4" ci="0" mb="2" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="2" cb="0"/><line nr="84" mi="4" ci="0" mb="2" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="2" cb="0"/><line nr="96" mi="4" ci="0" mb="2" cb="0"/><line nr="97" mi="8" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="2" cb="0"/><line nr="109" mi="4" ci="0" mb="2" cb="0"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="18" ci="0" mb="6" cb="0"/><line nr="123" mi="4" ci="0" mb="2" cb="0"/><line nr="124" mi="7" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="18" ci="0" mb="6" cb="0"/><line nr="137" mi="4" ci="0" mb="2" cb="0"/><line nr="138" mi="7" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="2" cb="0"/><line nr="148" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="249" covered="0"/><counter type="BRANCH" missed="48" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="44" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultStringFieldItem.java"><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="8" ci="0" mb="2" cb="0"/><line nr="39" mi="4" ci="0" mb="2" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="2513" covered="0"/><counter type="BRANCH" missed="476" covered="0"/><counter type="LINE" missed="477" covered="0"/><counter type="COMPLEXITY" missed="463" covered="0"/><counter type="METHOD" missed="225" covered="0"/><counter type="CLASS" missed="15" covered="0"/></package><package name="org/apache/plc4x/java/base"><class name="org/apache/plc4x/java/base/PlcMessageToMessageCodec"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Class;)V" line="35"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrevChannelHandler" desc="(Lio/netty/channel/ChannelHandlerContext;)Lio/netty/channel/ChannelHandler;" line="46"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="PlcMessageToMessageCodec.java"><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="2" cb="0"/><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="2" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="org/apache/plc4x/java/base/events"><class name="org/apache/plc4x/java/base/events/ConnectedEvent"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/base/events/ConnectEvent"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ConnectEvent.java"><line nr="21" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ConnectedEvent.java"><line nr="21" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><counter type="INSTRUCTION" missed="5103" covered="79"/><counter type="BRANCH" missed="640" covered="6"/><counter type="LINE" missed="1108" covered="18"/><counter type="COMPLEXITY" missed="832" covered="9"/><counter type="METHOD" missed="511" covered="7"/><counter type="CLASS" missed="39" covered="1"/></report>