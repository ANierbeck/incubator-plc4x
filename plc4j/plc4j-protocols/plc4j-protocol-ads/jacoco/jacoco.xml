<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="PLC4J: Protocol: ADS"><sessioninfo id="asf919.gq1.ygridcore.net-9e4f4d47" start="1519034653830" dump="1519034665785"/><package name="org/apache/plc4x/java/ads/connection"><class name="org/apache/plc4x/java/ads/connection/ADSPlcConnection"><method name="&lt;init&gt;" desc="(Ljava/net/InetAddress;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/InetAddress;Ljava/lang/Integer;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;)V" line="58"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/InetAddress;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/InetAddress;Ljava/lang/Integer;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargetAmsNetId" desc="()Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;" line="75"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargetAmsPort" desc="()Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSourceAmsNetId" desc="()Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;" line="83"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSourceAmsPort" desc="()Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;" line="87"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChannelHandler" desc="(Ljava/util/concurrent/CompletableFuture;)Lio/netty/channel/ChannelHandler;" line="92"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseAddress" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/api/model/Address;" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lorg/apache/plc4x/java/api/messages/PlcReadRequest;)Ljava/util/concurrent/CompletableFuture;" line="110"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Lorg/apache/plc4x/java/api/messages/PlcWriteRequest;)Ljava/util/concurrent/CompletableFuture;" line="119"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateAMSNetId" desc="()Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;" line="127"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateAMSPort" desc="()Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;" line="131"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="49" covered="62"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="12" covered="16"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/connection/ADSPlcConnection$1"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/connection/ADSPlcConnection;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initChannel" desc="(Lio/netty/channel/Channel;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ADSPlcConnection.java"><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="8" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="12" mb="0" cb="2"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="11" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="23" mb="0" cb="0"/><line nr="98" mi="0" ci="11" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="49" covered="106"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="12" covered="20"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="5" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="49" covered="106"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="12" covered="20"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="5" covered="11"/><counter type="CLASS" missed="0" covered="2"/></package><package name="org/apache/plc4x/java/ads/model"><class name="org/apache/plc4x/java/ads/model/ADSAddress"><method name="&lt;init&gt;" desc="(JJ)V" line="34"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(JJ)Lorg/apache/plc4x/java/ads/model/ADSAddress;" line="42"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/model/ADSAddress;" line="46"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndexGroup" desc="()J" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndexOffset" desc="()J" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ADSAddress.java"><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="2"/><line nr="48" mi="0" ci="16" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/apache/plc4x/java/ads"><class name="org/apache/plc4x/java/ads/ADSPlcDriver"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProtocolCode" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProtocolName" desc="()Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="connect" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/api/connection/PlcConnection;" line="61"><counter type="INSTRUCTION" missed="13" covered="78"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connect" desc="(Ljava/lang/String;Lorg/apache/plc4x/java/api/authentication/PlcAuthentication;)Lorg/apache/plc4x/java/api/connection/PlcConnection;" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="123"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="19"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ADSPlcDriver.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="22" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="11" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="16" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="1" ci="8" mb="1" cb="1"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="3" ci="5" mb="1" cb="1"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="3" ci="5" mb="1" cb="1"/><line nr="76" mi="0" ci="11" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="123"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="19"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="15" covered="123"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="19"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/apache/plc4x/java/ads/api/commands/types"><class name="org/apache/plc4x/java/ads/api/commands/types/IndexGroup"><method name="&lt;init&gt;" desc="([B)V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/Data"><method name="&lt;init&gt;" desc="([B)V" line="30"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/Data;" line="34"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/Data;" line="38"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;Ljava/nio/charset/Charset;)Lorg/apache/plc4x/java/ads/api/commands/types/Data;" line="43"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/MaxDelay"><method name="&lt;init&gt;" desc="([B)V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/MaxDelay;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/commands/types/MaxDelay;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/MaxDelay;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/MaxDelay;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/MinorVersion"><method name="&lt;init&gt;" desc="([B)V" line="31"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/MinorVersion;" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(I)Lorg/apache/plc4x/java/ads/api/commands/types/MinorVersion;" line="40"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/MinorVersion;" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/MinorVersion;" line="48"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCalculatedLength" desc="()J" line="55"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/CycleTime"><method name="&lt;init&gt;" desc="([B)V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/CycleTime;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/commands/types/CycleTime;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/CycleTime;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/CycleTime;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/AdsNotificationSample"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;Lorg/apache/plc4x/java/ads/api/commands/types/SampleSize;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)Lorg/apache/plc4x/java/ads/api/commands/types/AdsNotificationSample;" line="60"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;Lorg/apache/plc4x/java/ads/api/commands/types/SampleSize;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)Lorg/apache/plc4x/java/ads/api/commands/types/AdsNotificationSample;" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getByteBuf" desc="()Lio/netty/buffer/ByteBuf;" line="69"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNotificationHandle" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSampleSize" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/SampleSize;" line="77"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getData" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Data;" line="81"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="86"><counter type="INSTRUCTION" missed="8" covered="27"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="98"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="106"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="131"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="6" covered="24"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/Device"><method name="&lt;init&gt;" desc="([B)V" line="34"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/Device;" line="39"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/Device;" line="43"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/Device;" line="49"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;Ljava/nio/charset/Charset;)Lorg/apache/plc4x/java/ads/api/commands/types/Device;" line="54"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCalculatedLength" desc="()J" line="60"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/Samples"><method name="&lt;init&gt;" desc="([B)V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/Samples;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/commands/types/Samples;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/Samples;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/Samples;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/ADSState"><method name="&lt;init&gt;" desc="([B)V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/ADSState;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(I)Lorg/apache/plc4x/java/ads/api/commands/types/ADSState;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/ADSState;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/ADSState;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/Version"><method name="&lt;init&gt;" desc="([B)V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/Version;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(I)Lorg/apache/plc4x/java/ads/api/commands/types/Version;" line="49"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/Version;" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/Version;" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/NotificationHandle"><method name="&lt;init&gt;" desc="([B)V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/SampleSize"><method name="&lt;init&gt;" desc="([B)V" line="30"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/SampleSize;" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/commands/types/SampleSize;" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/util/LengthSupplier;)Lorg/apache/plc4x/java/ads/api/commands/types/SampleSize;" line="54"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/SampleSize;" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/SampleSize;" line="62"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/MajorVersion"><method name="&lt;init&gt;" desc="([B)V" line="31"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/MajorVersion;" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(I)Lorg/apache/plc4x/java/ads/api/commands/types/MajorVersion;" line="40"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/MajorVersion;" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/MajorVersion;" line="48"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCalculatedLength" desc="()J" line="55"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/IndexOffset"><method name="&lt;init&gt;" desc="([B)V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/TimeStamp"><method name="&lt;init&gt;" desc="([B)V" line="40"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofBigInteger" desc="(Ljava/math/BigInteger;)[B" line="64"><counter type="INSTRUCTION" missed="1" covered="80"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/math/BigInteger;)Lorg/apache/plc4x/java/ads/api/commands/types/TimeStamp;" line="81"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofWinTime" desc="(Ljava/math/BigInteger;)Lorg/apache/plc4x/java/ads/api/commands/types/TimeStamp;" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/commands/types/TimeStamp;" line="89"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/TimeStamp;" line="93"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofWinTime" desc="(J)Lorg/apache/plc4x/java/ads/api/commands/types/TimeStamp;" line="97"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofWinTime" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/TimeStamp;" line="101"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/TimeStamp;" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/util/Date;)Lorg/apache/plc4x/java/ads/api/commands/types/TimeStamp;" line="109"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/TimeStamp;" line="114"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBigIntegerValue" desc="()Ljava/math/BigInteger;" line="120"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsDate" desc="()Ljava/util/Date;" line="124"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="javaToWinTime" desc="(Ljava/math/BigInteger;)Ljava/math/BigInteger;" line="128"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="winTimeToJava" desc="(Ljava/math/BigInteger;)Ljava/math/BigInteger;" line="133"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCalculatedLength" desc="()J" line="139"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="144"><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="155"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="162"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="297"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="0" covered="50"/><counter type="COMPLEXITY" missed="4" covered="28"/><counter type="METHOD" missed="0" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/DeviceState"><method name="&lt;init&gt;" desc="([B)V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/DeviceState;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(I)Lorg/apache/plc4x/java/ads/api/commands/types/DeviceState;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/DeviceState;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/DeviceState;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/ReadLength"><method name="&lt;init&gt;" desc="([B)V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/ReadLength;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/commands/types/ReadLength;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/ReadLength;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/ReadLength;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/AdsReturnCode"><method name="&lt;init&gt;" desc="(Ljava/lang/String;IJJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="171"><counter type="INSTRUCTION" missed="16" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/commands/types/AdsReturnCode;" line="184"><counter type="INSTRUCTION" missed="4" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/AdsReturnCode;" line="193"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofInt" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/AdsReturnCode;" line="197"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHex" desc="()J" line="201"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDec" desc="()J" line="205"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="209"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPossibleCauses" desc="()Ljava/lang/String;" line="213"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSolution" desc="()Ljava/lang/String;" line="217"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="222"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="1819"/><counter type="LINE" missed="0" covered="122"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="1933"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="141"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/WriteLength"><method name="&lt;init&gt;" desc="([B)V" line="30"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/WriteLength;" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/commands/types/WriteLength;" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/util/LengthSupplier;)Lorg/apache/plc4x/java/ads/api/commands/types/WriteLength;" line="54"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/WriteLength;" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/WriteLength;" line="62"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="36"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/Stamps"><method name="&lt;init&gt;" desc="([B)V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/Stamps;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/commands/types/Stamps;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/Stamps;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/Stamps;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/Length"><method name="&lt;init&gt;" desc="([B)V" line="30"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/Length;" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/commands/types/Length;" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/util/LengthSupplier;)Lorg/apache/plc4x/java/ads/api/commands/types/Length;" line="54"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/Length;" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/Length;" line="62"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/Result"><method name="&lt;init&gt;" desc="([B)V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/Result;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/commands/types/Result;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/Result;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/Result;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toAdsReturnCode" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/AdsReturnCode;" line="61"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/AdsStampHeader"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/commands/types/TimeStamp;Lorg/apache/plc4x/java/ads/api/commands/types/Samples;Ljava/util/List;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/commands/types/TimeStamp;Ljava/util/List;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/commands/types/TimeStamp;Lorg/apache/plc4x/java/ads/api/commands/types/Samples;Ljava/util/List;)Lorg/apache/plc4x/java/ads/api/commands/types/AdsStampHeader;" line="57"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/commands/types/TimeStamp;Ljava/util/List;)Lorg/apache/plc4x/java/ads/api/commands/types/AdsStampHeader;" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getByteBuf" desc="()Lio/netty/buffer/ByteBuf;" line="66"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimeStamp" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/TimeStamp;" line="70"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSamples" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Samples;" line="74"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAdsNotificationSamples" desc="()Ljava/util/List;" line="78"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="83"><counter type="INSTRUCTION" missed="8" covered="27"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="95"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="103"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getByteBuf$0" desc="()Lio/netty/buffer/ByteBuf;" line="66"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="128"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="7" covered="20"/><counter type="COMPLEXITY" missed="8" covered="8"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/types/TransmissionMode"><method name="&lt;init&gt;" desc="([B)V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/commands/types/TransmissionMode;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/commands/types/TransmissionMode;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/commands/types/TransmissionMode;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/TransmissionMode;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ReadLength.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Data.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSState.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SampleSize.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WriteLength.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="36"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AdsNotificationSample.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="19" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="10" mb="0" cb="2"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="3" mb="1" cb="1"/><line nr="87" mi="2" ci="3" mb="1" cb="1"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="2" ci="6" mb="1" cb="1"/><line nr="92" mi="2" ci="6" mb="1" cb="1"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="8" ci="0" mb="0" cb="0"/><line nr="100" mi="8" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="12" mb="0" cb="0"/><line nr="108" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="131"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="6" covered="24"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IndexOffset.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AdsReturnCode.java"><line nr="29" mi="0" ci="488" mb="0" cb="0"/><line nr="31" mi="0" ci="11" mb="0" cb="0"/><line nr="32" mi="0" ci="11" mb="0" cb="0"/><line nr="33" mi="0" ci="11" mb="0" cb="0"/><line nr="34" mi="0" ci="11" mb="0" cb="0"/><line nr="35" mi="0" ci="11" mb="0" cb="0"/><line nr="36" mi="0" ci="11" mb="0" cb="0"/><line nr="37" mi="0" ci="11" mb="0" cb="0"/><line nr="38" mi="0" ci="11" mb="0" cb="0"/><line nr="39" mi="0" ci="11" mb="0" cb="0"/><line nr="40" mi="0" ci="11" mb="0" cb="0"/><line nr="41" mi="0" ci="11" mb="0" cb="0"/><line nr="42" mi="0" ci="11" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="0" cb="0"/><line nr="44" mi="0" ci="11" mb="0" cb="0"/><line nr="45" mi="0" ci="11" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="0" cb="0"/><line nr="47" mi="0" ci="11" mb="0" cb="0"/><line nr="48" mi="0" ci="11" mb="0" cb="0"/><line nr="49" mi="0" ci="11" mb="0" cb="0"/><line nr="50" mi="0" ci="11" mb="0" cb="0"/><line nr="51" mi="0" ci="11" mb="0" cb="0"/><line nr="52" mi="0" ci="11" mb="0" cb="0"/><line nr="53" mi="0" ci="11" mb="0" cb="0"/><line nr="54" mi="0" ci="11" mb="0" cb="0"/><line nr="55" mi="0" ci="11" mb="0" cb="0"/><line nr="56" mi="0" ci="11" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="0"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="59" mi="0" ci="11" mb="0" cb="0"/><line nr="63" mi="0" ci="11" mb="0" cb="0"/><line nr="64" mi="0" ci="11" mb="0" cb="0"/><line nr="65" mi="0" ci="11" mb="0" cb="0"/><line nr="66" mi="0" ci="11" mb="0" cb="0"/><line nr="67" mi="0" ci="11" mb="0" cb="0"/><line nr="68" mi="0" ci="11" mb="0" cb="0"/><line nr="69" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="0" ci="11" mb="0" cb="0"/><line nr="71" mi="0" ci="11" mb="0" cb="0"/><line nr="72" mi="0" ci="11" mb="0" cb="0"/><line nr="73" mi="0" ci="11" mb="0" cb="0"/><line nr="74" mi="0" ci="11" mb="0" cb="0"/><line nr="75" mi="0" ci="11" mb="0" cb="0"/><line nr="76" mi="0" ci="11" mb="0" cb="0"/><line nr="80" mi="0" ci="11" mb="0" cb="0"/><line nr="81" mi="0" ci="11" mb="0" cb="0"/><line nr="82" mi="0" ci="11" mb="0" cb="0"/><line nr="83" mi="0" ci="11" mb="0" cb="0"/><line nr="84" mi="0" ci="11" mb="0" cb="0"/><line nr="85" mi="0" ci="11" mb="0" cb="0"/><line nr="86" mi="0" ci="11" mb="0" cb="0"/><line nr="87" mi="0" ci="11" mb="0" cb="0"/><line nr="88" mi="0" ci="11" mb="0" cb="0"/><line nr="89" mi="0" ci="11" mb="0" cb="0"/><line nr="90" mi="0" ci="11" mb="0" cb="0"/><line nr="91" mi="0" ci="11" mb="0" cb="0"/><line nr="92" mi="0" ci="11" mb="0" cb="0"/><line nr="93" mi="0" ci="11" mb="0" cb="0"/><line nr="94" mi="0" ci="11" mb="0" cb="0"/><line nr="95" mi="0" ci="11" mb="0" cb="0"/><line nr="96" mi="0" ci="11" mb="0" cb="0"/><line nr="97" mi="0" ci="11" mb="0" cb="0"/><line nr="98" mi="0" ci="11" mb="0" cb="0"/><line nr="99" mi="0" ci="11" mb="0" cb="0"/><line nr="100" mi="0" ci="11" mb="0" cb="0"/><line nr="101" mi="0" ci="11" mb="0" cb="0"/><line nr="102" mi="0" ci="11" mb="0" cb="0"/><line nr="103" mi="0" ci="11" mb="0" cb="0"/><line nr="104" mi="0" ci="11" mb="0" cb="0"/><line nr="105" mi="0" ci="11" mb="0" cb="0"/><line nr="106" mi="0" ci="11" mb="0" cb="0"/><line nr="107" mi="0" ci="11" mb="0" cb="0"/><line nr="108" mi="0" ci="11" mb="0" cb="0"/><line nr="109" mi="0" ci="11" mb="0" cb="0"/><line nr="110" mi="0" ci="11" mb="0" cb="0"/><line nr="111" mi="0" ci="11" mb="0" cb="0"/><line nr="112" mi="0" ci="11" mb="0" cb="0"/><line nr="113" mi="0" ci="11" mb="0" cb="0"/><line nr="114" mi="0" ci="11" mb="0" cb="0"/><line nr="115" mi="0" ci="11" mb="0" cb="0"/><line nr="116" mi="0" ci="11" mb="0" cb="0"/><line nr="117" mi="0" ci="11" mb="0" cb="0"/><line nr="118" mi="0" ci="11" mb="0" cb="0"/><line nr="119" mi="0" ci="11" mb="0" cb="0"/><line nr="120" mi="0" ci="11" mb="0" cb="0"/><line nr="121" mi="0" ci="11" mb="0" cb="0"/><line nr="122" mi="0" ci="11" mb="0" cb="0"/><line nr="123" mi="0" ci="11" mb="0" cb="0"/><line nr="124" mi="0" ci="11" mb="0" cb="0"/><line nr="125" mi="0" ci="11" mb="0" cb="0"/><line nr="126" mi="0" ci="11" mb="0" cb="0"/><line nr="127" mi="0" ci="11" mb="0" cb="0"/><line nr="128" mi="0" ci="11" mb="0" cb="0"/><line nr="129" mi="0" ci="11" mb="0" cb="0"/><line nr="130" mi="0" ci="11" mb="0" cb="0"/><line nr="131" mi="0" ci="11" mb="0" cb="0"/><line nr="132" mi="0" ci="11" mb="0" cb="0"/><line nr="136" mi="0" ci="11" mb="0" cb="0"/><line nr="137" mi="0" ci="11" mb="0" cb="0"/><line nr="138" mi="0" ci="11" mb="0" cb="0"/><line nr="139" mi="0" ci="11" mb="0" cb="0"/><line nr="140" mi="0" ci="11" mb="0" cb="0"/><line nr="141" mi="0" ci="11" mb="0" cb="0"/><line nr="142" mi="0" ci="11" mb="0" cb="0"/><line nr="143" mi="0" ci="11" mb="0" cb="0"/><line nr="144" mi="0" ci="11" mb="0" cb="0"/><line nr="145" mi="0" ci="11" mb="0" cb="0"/><line nr="146" mi="0" ci="11" mb="0" cb="0"/><line nr="147" mi="0" ci="11" mb="0" cb="0"/><line nr="148" mi="0" ci="11" mb="0" cb="0"/><line nr="149" mi="0" ci="11" mb="0" cb="0"/><line nr="150" mi="0" ci="11" mb="0" cb="0"/><line nr="151" mi="0" ci="11" mb="0" cb="0"/><line nr="152" mi="0" ci="11" mb="0" cb="0"/><line nr="153" mi="0" ci="11" mb="0" cb="0"/><line nr="154" mi="0" ci="11" mb="0" cb="0"/><line nr="155" mi="0" ci="11" mb="0" cb="0"/><line nr="156" mi="0" ci="11" mb="0" cb="0"/><line nr="160" mi="0" ci="11" mb="0" cb="0"/><line nr="161" mi="0" ci="11" mb="0" cb="0"/><line nr="162" mi="0" ci="11" mb="0" cb="0"/><line nr="163" mi="0" ci="11" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="1" cb="1"/><line nr="175" mi="16" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="2" ci="14" mb="1" cb="1"/><line nr="185" mi="0" ci="5" mb="1" cb="1"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="13" mb="0" cb="0"/><line nr="223" mi="0" ci="36" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="1933"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="141"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TimeStamp.java"><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="55" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="11" mb="0" cb="2"/><line nr="68" mi="0" ci="9" mb="0" cb="2"/><line nr="69" mi="0" ci="9" mb="0" cb="2"/><line nr="70" mi="0" ci="9" mb="0" cb="2"/><line nr="71" mi="0" ci="9" mb="0" cb="2"/><line nr="73" mi="0" ci="9" mb="0" cb="2"/><line nr="74" mi="0" ci="9" mb="0" cb="2"/><line nr="75" mi="1" ci="7" mb="1" cb="1"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="2" ci="3" mb="1" cb="1"/><line nr="145" mi="2" ci="3" mb="1" cb="1"/><line nr="146" mi="2" ci="4" mb="1" cb="1"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="20" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="297"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="0" covered="50"/><counter type="COMPLEXITY" missed="4" covered="28"/><counter type="METHOD" missed="0" covered="21"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Stamps.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CycleTime.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DeviceState.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Version.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MinorVersion.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="11" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MajorVersion.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="11" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IndexGroup.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MaxDelay.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TransmissionMode.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Length.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NotificationHandle.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Device.java"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="18" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Result.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Samples.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AdsStampHeader.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="29" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="3" mb="1" cb="1"/><line nr="84" mi="2" ci="3" mb="1" cb="1"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="2" ci="6" mb="1" cb="1"/><line nr="89" mi="2" ci="6" mb="1" cb="1"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="8" ci="0" mb="0" cb="0"/><line nr="97" mi="8" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="22" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="128"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="7" covered="20"/><counter type="COMPLEXITY" missed="8" covered="8"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="112" covered="3313"/><counter type="BRANCH" missed="15" covered="31"/><counter type="LINE" missed="17" covered="479"/><counter type="COMPLEXITY" missed="24" covered="213"/><counter type="METHOD" missed="9" covered="205"/><counter type="CLASS" missed="0" covered="24"/></package><package name="org/apache/plc4x/java/ads/api/commands"><class name="org/apache/plc4x/java/ads/api/commands/ADSDeleteDeviceNotificationResponse"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Result;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Result;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Result;)Lorg/apache/plc4x/java/ads/api/commands/ADSDeleteDeviceNotificationResponse;" line="54"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Result;)Lorg/apache/plc4x/java/ads/api/commands/ADSDeleteDeviceNotificationResponse;" line="58"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Result;" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="67"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="72"><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="83"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="87"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSAddDeviceNotificationResponse"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Result;Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Result;Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Result;Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;)Lorg/apache/plc4x/java/ads/api/commands/ADSAddDeviceNotificationResponse;" line="62"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Result;Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;)Lorg/apache/plc4x/java/ads/api/commands/ADSAddDeviceNotificationResponse;" line="66"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Result;" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNotificationHandle" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="79"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="84"><counter type="INSTRUCTION" missed="8" covered="25"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="96"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="118"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSReadDeviceInfoResponse"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Result;Lorg/apache/plc4x/java/ads/api/commands/types/MajorVersion;Lorg/apache/plc4x/java/ads/api/commands/types/MinorVersion;Lorg/apache/plc4x/java/ads/api/commands/types/Version;Lorg/apache/plc4x/java/ads/api/commands/types/Device;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Result;Lorg/apache/plc4x/java/ads/api/commands/types/MajorVersion;Lorg/apache/plc4x/java/ads/api/commands/types/MinorVersion;Lorg/apache/plc4x/java/ads/api/commands/types/Version;Lorg/apache/plc4x/java/ads/api/commands/types/Device;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Result;Lorg/apache/plc4x/java/ads/api/commands/types/MajorVersion;Lorg/apache/plc4x/java/ads/api/commands/types/MinorVersion;Lorg/apache/plc4x/java/ads/api/commands/types/Version;Lorg/apache/plc4x/java/ads/api/commands/types/Device;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadDeviceInfoResponse;" line="78"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Result;Lorg/apache/plc4x/java/ads/api/commands/types/MajorVersion;Lorg/apache/plc4x/java/ads/api/commands/types/MinorVersion;Lorg/apache/plc4x/java/ads/api/commands/types/Version;Lorg/apache/plc4x/java/ads/api/commands/types/Device;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadDeviceInfoResponse;" line="82"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Result;" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMajorVersion" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/MajorVersion;" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinorVersion" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/MinorVersion;" line="94"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVersion" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Version;" line="98"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDevice" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Device;" line="102"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="107"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="112"><counter type="INSTRUCTION" missed="14" covered="43"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="127"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="138"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="59" covered="211"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="7" covered="33"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSDeleteDeviceNotificationRequest"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;)Lorg/apache/plc4x/java/ads/api/commands/ADSDeleteDeviceNotificationRequest;" line="59"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;)Lorg/apache/plc4x/java/ads/api/commands/ADSDeleteDeviceNotificationRequest;" line="63"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;)Lorg/apache/plc4x/java/ads/api/commands/ADSDeleteDeviceNotificationRequest;" line="67"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNotificationHandle" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/NotificationHandle;" line="71"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="76"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="81"><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="92"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="102"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSWriteControlResponse"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Result;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Result;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Result;)Lorg/apache/plc4x/java/ads/api/commands/ADSWriteControlResponse;" line="53"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Result;)Lorg/apache/plc4x/java/ads/api/commands/ADSWriteControlResponse;" line="57"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Result;" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="66"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="71"><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="82"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="89"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="87"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSWriteControlRequest"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/ADSState;Lorg/apache/plc4x/java/ads/api/commands/types/DeviceState;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/ADSState;Lorg/apache/plc4x/java/ads/api/commands/types/DeviceState;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/ADSState;Lorg/apache/plc4x/java/ads/api/commands/types/DeviceState;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/ADSState;Lorg/apache/plc4x/java/ads/api/commands/types/DeviceState;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)Lorg/apache/plc4x/java/ads/api/commands/ADSWriteControlRequest;" line="91"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/ADSState;Lorg/apache/plc4x/java/ads/api/commands/types/DeviceState;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)Lorg/apache/plc4x/java/ads/api/commands/ADSWriteControlRequest;" line="95"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/ADSState;Lorg/apache/plc4x/java/ads/api/commands/types/DeviceState;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)Lorg/apache/plc4x/java/ads/api/commands/ADSWriteControlRequest;" line="99"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsState" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/ADSState;" line="103"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeviceState" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/DeviceState;" line="107"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLength" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Length;" line="111"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getData" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Data;" line="115"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="120"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="125"><counter type="INSTRUCTION" missed="12" covered="37"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="139"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="149"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="49" covered="226"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="6" covered="40"/><counter type="COMPLEXITY" missed="7" covered="14"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSReadStateRequest"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadStateRequest;" line="50"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadStateRequest;" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadStateRequest;" line="58"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="63"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSDeviceNotificationRequest"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/Stamps;Ljava/util/List;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/Stamps;Ljava/util/List;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Stamps;Ljava/util/List;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/Stamps;Ljava/util/List;)Lorg/apache/plc4x/java/ads/api/commands/ADSDeviceNotificationRequest;" line="92"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/Stamps;Ljava/util/List;)Lorg/apache/plc4x/java/ads/api/commands/ADSDeviceNotificationRequest;" line="96"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Stamps;Ljava/util/List;)Lorg/apache/plc4x/java/ads/api/commands/ADSDeviceNotificationRequest;" line="100"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLength" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Length;" line="104"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStamps" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Stamps;" line="108"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsStampHeaders" desc="()Ljava/util/List;" line="112"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLengthSupplier" desc="()Lorg/apache/plc4x/java/ads/api/util/LengthSupplier;" line="116"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="121"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="126"><counter type="INSTRUCTION" missed="10" covered="31"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="139"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="148"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/util/List;)J" line="83"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="221"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="5" covered="41"/><counter type="COMPLEXITY" missed="6" covered="16"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSReadResponse"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Result;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Result;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Result;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadResponse;" line="73"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Result;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadResponse;" line="77"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="82"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Result;" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLength" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Length;" line="90"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getData" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Data;" line="94"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="99"><counter type="INSTRUCTION" missed="10" covered="31"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="112"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="159"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="5" covered="28"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSReadRequest"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Length;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Length;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Length;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Length;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadRequest;" line="77"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Length;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadRequest;" line="81"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Length;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadRequest;" line="85"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndexGroup" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;" line="89"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndexOffset" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;" line="93"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLength" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Length;" line="97"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="102"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="107"><counter type="INSTRUCTION" missed="10" covered="31"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="120"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="129"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="176"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="5" covered="31"/><counter type="COMPLEXITY" missed="6" covered="12"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/UnknownCommand"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lio/netty/buffer/ByteBuf;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/State;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lio/netty/buffer/ByteBuf;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/generic/AMSTCPPacket;" line="54"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/State;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/UnknownCommand;" line="58"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="63"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="74"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAdsData$0" desc="()Lio/netty/buffer/ByteBuf;" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="47"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="10"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSAbstractRequest"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/State;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSReadWriteRequest"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/ReadLength;Lorg/apache/plc4x/java/ads/api/commands/types/WriteLength;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/ReadLength;Lorg/apache/plc4x/java/ads/api/commands/types/WriteLength;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/ReadLength;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/ReadLength;Lorg/apache/plc4x/java/ads/api/commands/types/WriteLength;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadWriteRequest;" line="95"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/ReadLength;Lorg/apache/plc4x/java/ads/api/commands/types/WriteLength;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadWriteRequest;" line="99"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/ReadLength;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadWriteRequest;" line="103"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndexGroup" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;" line="107"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndexOffset" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;" line="111"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReadLength" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/ReadLength;" line="115"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWriteLength" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/WriteLength;" line="119"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getData" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Data;" line="123"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="128"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="133"><counter type="INSTRUCTION" missed="14" covered="43"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="148"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="159"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="59" covered="264"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="7" covered="45"/><counter type="COMPLEXITY" missed="8" covered="15"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSReadWriteResponse"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Result;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Result;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Result;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadWriteResponse;" line="75"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Result;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadWriteResponse;" line="79"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Result;" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLength" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Length;" line="87"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getData" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Data;" line="91"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="96"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="101"><counter type="INSTRUCTION" missed="10" covered="31"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="114"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="123"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="159"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="5" covered="28"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSReadStateResponse"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Result;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Result;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Result;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadStateResponse;" line="54"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Result;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadStateResponse;" line="58"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Result;" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="67"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="72"><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="83"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="87"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSAddDeviceNotificationRequest$Reserved"><method name="&lt;init&gt;" desc="()V" line="196"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="193"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSAbstractResponse"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)V" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/State;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;)V" line="43"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="14"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSDeviceNotificationResponse"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="37"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSReadDeviceInfoRequest"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadDeviceInfoRequest;" line="50"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadDeviceInfoRequest;" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;)Lorg/apache/plc4x/java/ads/api/commands/ADSReadDeviceInfoRequest;" line="58"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="63"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSWriteRequest"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)Lorg/apache/plc4x/java/ads/api/commands/ADSWriteRequest;" line="89"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)Lorg/apache/plc4x/java/ads/api/commands/ADSWriteRequest;" line="93"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Data;)Lorg/apache/plc4x/java/ads/api/commands/ADSWriteRequest;" line="97"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndexGroup" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndexOffset" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLength" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Length;" line="109"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getData" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Data;" line="113"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="118"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="123"><counter type="INSTRUCTION" missed="12" covered="37"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="137"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="147"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="49" covered="226"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="6" covered="40"/><counter type="COMPLEXITY" missed="7" covered="14"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSAddDeviceNotificationRequest"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/TransmissionMode;Lorg/apache/plc4x/java/ads/api/commands/types/MaxDelay;Lorg/apache/plc4x/java/ads/api/commands/types/CycleTime;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/TransmissionMode;Lorg/apache/plc4x/java/ads/api/commands/types/MaxDelay;Lorg/apache/plc4x/java/ads/api/commands/types/CycleTime;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/TransmissionMode;Lorg/apache/plc4x/java/ads/api/commands/types/MaxDelay;Lorg/apache/plc4x/java/ads/api/commands/types/CycleTime;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="103"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/TransmissionMode;Lorg/apache/plc4x/java/ads/api/commands/types/MaxDelay;Lorg/apache/plc4x/java/ads/api/commands/types/CycleTime;)Lorg/apache/plc4x/java/ads/api/commands/ADSAddDeviceNotificationRequest;" line="107"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/TransmissionMode;Lorg/apache/plc4x/java/ads/api/commands/types/MaxDelay;Lorg/apache/plc4x/java/ads/api/commands/types/CycleTime;)Lorg/apache/plc4x/java/ads/api/commands/ADSAddDeviceNotificationRequest;" line="111"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;Lorg/apache/plc4x/java/ads/api/commands/types/Length;Lorg/apache/plc4x/java/ads/api/commands/types/TransmissionMode;Lorg/apache/plc4x/java/ads/api/commands/types/MaxDelay;Lorg/apache/plc4x/java/ads/api/commands/types/CycleTime;)Lorg/apache/plc4x/java/ads/api/commands/ADSAddDeviceNotificationRequest;" line="115"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndexGroup" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/IndexGroup;" line="119"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndexOffset" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/IndexOffset;" line="123"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLength" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Length;" line="127"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTransmissionMode" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/TransmissionMode;" line="131"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxDelay" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/MaxDelay;" line="135"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCycleTime" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/CycleTime;" line="139"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReserved" desc="()Lorg/apache/plc4x/java/ads/api/commands/ADSAddDeviceNotificationRequest$Reserved;" line="143"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="148"><counter type="INSTRUCTION" missed="18" covered="55"/><counter type="BRANCH" missed="9" covered="9"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="165"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="178"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="79" covered="316"/><counter type="BRANCH" missed="9" covered="9"/><counter type="LINE" missed="9" covered="51"/><counter type="COMPLEXITY" missed="10" covered="16"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/commands/ADSWriteResponse"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Result;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Result;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;Lorg/apache/plc4x/java/ads/api/commands/types/Result;)Lorg/apache/plc4x/java/ads/api/commands/ADSWriteResponse;" line="54"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;Lorg/apache/plc4x/java/ads/api/commands/types/Result;)Lorg/apache/plc4x/java/ads/api/commands/ADSWriteResponse;" line="58"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/Result;" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdsData" desc="()Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="67"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="72"><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="83"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="87"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ADSReadResponse.java"><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="9" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="0"/><line nr="82" mi="0" ci="20" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="10" mb="0" cb="2"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="2" ci="3" mb="1" cb="1"/><line nr="100" mi="2" ci="3" mb="1" cb="1"/><line nr="101" mi="2" ci="4" mb="1" cb="1"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="2" ci="6" mb="1" cb="1"/><line nr="106" mi="2" ci="6" mb="1" cb="1"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="8" ci="0" mb="0" cb="0"/><line nr="114" mi="8" ci="0" mb="0" cb="0"/><line nr="115" mi="8" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="12" mb="0" cb="0"/><line nr="123" mi="0" ci="10" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="159"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="5" covered="28"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSWriteControlResponse.java"><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="0"/><line nr="71" mi="2" ci="3" mb="1" cb="1"/><line nr="72" mi="2" ci="3" mb="1" cb="1"/><line nr="73" mi="2" ci="4" mb="1" cb="1"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="8" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="12" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="87"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnknownCommand.java"><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="3" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="2" cb="0"/><line nr="64" mi="5" ci="0" mb="2" cb="0"/><line nr="65" mi="6" ci="0" mb="2" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="47"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="10"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSAddDeviceNotificationRequest.java"><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="40" mb="0" cb="0"/><line nr="107" mi="0" ci="12" mb="0" cb="0"/><line nr="111" mi="0" ci="11" mb="0" cb="0"/><line nr="115" mi="0" ci="15" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="2" ci="3" mb="1" cb="1"/><line nr="149" mi="2" ci="3" mb="1" cb="1"/><line nr="150" mi="2" ci="4" mb="1" cb="1"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="2" ci="6" mb="1" cb="1"/><line nr="155" mi="2" ci="6" mb="1" cb="1"/><line nr="156" mi="2" ci="6" mb="1" cb="1"/><line nr="157" mi="2" ci="6" mb="1" cb="1"/><line nr="158" mi="2" ci="6" mb="1" cb="1"/><line nr="159" mi="2" ci="6" mb="1" cb="1"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="8" ci="0" mb="0" cb="0"/><line nr="167" mi="8" ci="0" mb="0" cb="0"/><line nr="168" mi="8" ci="0" mb="0" cb="0"/><line nr="169" mi="8" ci="0" mb="0" cb="0"/><line nr="170" mi="8" ci="0" mb="0" cb="0"/><line nr="171" mi="8" ci="0" mb="0" cb="0"/><line nr="172" mi="8" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="42" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="68" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="393"/><counter type="BRANCH" missed="9" covered="9"/><counter type="LINE" missed="9" covered="55"/><counter type="COMPLEXITY" missed="10" covered="18"/><counter type="METHOD" missed="1" covered="18"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ADSReadDeviceInfoRequest.java"><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSAbstractRequest.java"><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSAddDeviceNotificationResponse.java"><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="15" mb="0" cb="0"/><line nr="84" mi="2" ci="3" mb="1" cb="1"/><line nr="85" mi="2" ci="3" mb="1" cb="1"/><line nr="86" mi="2" ci="4" mb="1" cb="1"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="2" ci="6" mb="1" cb="1"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="8" ci="0" mb="0" cb="0"/><line nr="98" mi="8" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="17" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="118"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSReadWriteResponse.java"><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="79" mi="0" ci="11" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="2"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="20" mb="0" cb="0"/><line nr="101" mi="2" ci="3" mb="1" cb="1"/><line nr="102" mi="2" ci="3" mb="1" cb="1"/><line nr="103" mi="2" ci="4" mb="1" cb="1"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="2" ci="6" mb="1" cb="1"/><line nr="108" mi="2" ci="6" mb="1" cb="1"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="8" ci="0" mb="0" cb="0"/><line nr="116" mi="8" ci="0" mb="0" cb="0"/><line nr="117" mi="8" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="12" mb="0" cb="0"/><line nr="125" mi="0" ci="10" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="159"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="5" covered="28"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSReadDeviceInfoResponse.java"><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="11" mb="0" cb="0"/><line nr="82" mi="0" ci="14" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="30" mb="0" cb="0"/><line nr="112" mi="2" ci="3" mb="1" cb="1"/><line nr="113" mi="2" ci="3" mb="1" cb="1"/><line nr="114" mi="2" ci="4" mb="1" cb="1"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="2" ci="6" mb="1" cb="1"/><line nr="119" mi="2" ci="6" mb="1" cb="1"/><line nr="120" mi="2" ci="6" mb="1" cb="1"/><line nr="121" mi="2" ci="6" mb="1" cb="1"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="8" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="0" cb="0"/><line nr="130" mi="8" ci="0" mb="0" cb="0"/><line nr="131" mi="8" ci="0" mb="0" cb="0"/><line nr="132" mi="8" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="32" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="211"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="7" covered="33"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSAbstractResponse.java"><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="8" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="14"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSReadWriteRequest.java"><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="11" mb="0" cb="0"/><line nr="99" mi="0" ci="10" mb="0" cb="0"/><line nr="103" mi="0" ci="13" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="11" mb="0" cb="2"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="30" mb="0" cb="0"/><line nr="133" mi="2" ci="3" mb="1" cb="1"/><line nr="134" mi="2" ci="3" mb="1" cb="1"/><line nr="135" mi="2" ci="4" mb="1" cb="1"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="2" ci="6" mb="1" cb="1"/><line nr="140" mi="2" ci="6" mb="1" cb="1"/><line nr="141" mi="2" ci="6" mb="1" cb="1"/><line nr="142" mi="2" ci="6" mb="1" cb="1"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="8" ci="0" mb="0" cb="0"/><line nr="150" mi="8" ci="0" mb="0" cb="0"/><line nr="151" mi="8" ci="0" mb="0" cb="0"/><line nr="152" mi="8" ci="0" mb="0" cb="0"/><line nr="153" mi="8" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="22" mb="0" cb="0"/><line nr="163" mi="0" ci="10" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="264"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="7" covered="45"/><counter type="COMPLEXITY" missed="8" covered="15"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSReadStateResponse.java"><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="0"/><line nr="72" mi="2" ci="3" mb="1" cb="1"/><line nr="73" mi="2" ci="3" mb="1" cb="1"/><line nr="74" mi="2" ci="4" mb="1" cb="1"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="8" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="12" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="87"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSWriteControlRequest.java"><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="95" mi="0" ci="9" mb="0" cb="0"/><line nr="99" mi="0" ci="12" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="10" mb="0" cb="2"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="25" mb="0" cb="0"/><line nr="125" mi="2" ci="3" mb="1" cb="1"/><line nr="126" mi="2" ci="3" mb="1" cb="1"/><line nr="127" mi="2" ci="4" mb="1" cb="1"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="2" ci="6" mb="1" cb="1"/><line nr="132" mi="2" ci="6" mb="1" cb="1"/><line nr="133" mi="2" ci="6" mb="1" cb="1"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="8" ci="0" mb="0" cb="0"/><line nr="141" mi="8" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="0" mb="0" cb="0"/><line nr="143" mi="8" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="17" mb="0" cb="0"/><line nr="152" mi="0" ci="10" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="49" covered="226"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="6" covered="40"/><counter type="COMPLEXITY" missed="7" covered="14"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSReadRequest.java"><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="9" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="85" mi="0" ci="12" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="20" mb="0" cb="0"/><line nr="107" mi="2" ci="3" mb="1" cb="1"/><line nr="108" mi="2" ci="3" mb="1" cb="1"/><line nr="109" mi="2" ci="4" mb="1" cb="1"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="2" ci="6" mb="1" cb="1"/><line nr="114" mi="2" ci="6" mb="1" cb="1"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="8" ci="0" mb="0" cb="0"/><line nr="122" mi="8" ci="0" mb="0" cb="0"/><line nr="123" mi="8" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="22" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="176"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="5" covered="31"/><counter type="COMPLEXITY" missed="6" covered="12"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSDeviceNotificationRequest.java"><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="10" mb="0" cb="2"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="9" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="100" mi="0" ci="11" mb="0" cb="0"/><line nr="104" mi="0" ci="10" mb="0" cb="2"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="28" mb="0" cb="0"/><line nr="126" mi="2" ci="3" mb="1" cb="1"/><line nr="127" mi="2" ci="3" mb="1" cb="1"/><line nr="128" mi="2" ci="4" mb="1" cb="1"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="2" ci="6" mb="1" cb="1"/><line nr="133" mi="2" ci="6" mb="1" cb="1"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="8" ci="0" mb="0" cb="0"/><line nr="141" mi="8" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="0" ci="15" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="221"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="5" covered="41"/><counter type="COMPLEXITY" missed="6" covered="16"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSDeleteDeviceNotificationRequest.java"><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="10" mb="0" cb="0"/><line nr="81" mi="2" ci="3" mb="1" cb="1"/><line nr="82" mi="2" ci="3" mb="1" cb="1"/><line nr="83" mi="2" ci="4" mb="1" cb="1"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="8" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="12" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="102"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSDeleteDeviceNotificationResponse.java"><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="0"/><line nr="72" mi="2" ci="3" mb="1" cb="1"/><line nr="73" mi="2" ci="3" mb="1" cb="1"/><line nr="74" mi="2" ci="4" mb="1" cb="1"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="8" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="12" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="87"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSWriteRequest.java"><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="10" mb="0" cb="0"/><line nr="93" mi="0" ci="9" mb="0" cb="0"/><line nr="97" mi="0" ci="12" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="10" mb="0" cb="2"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="25" mb="0" cb="0"/><line nr="123" mi="2" ci="3" mb="1" cb="1"/><line nr="124" mi="2" ci="3" mb="1" cb="1"/><line nr="125" mi="2" ci="4" mb="1" cb="1"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="2" ci="6" mb="1" cb="1"/><line nr="130" mi="2" ci="6" mb="1" cb="1"/><line nr="131" mi="2" ci="6" mb="1" cb="1"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="8" ci="0" mb="0" cb="0"/><line nr="139" mi="8" ci="0" mb="0" cb="0"/><line nr="140" mi="8" ci="0" mb="0" cb="0"/><line nr="141" mi="8" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="17" mb="0" cb="0"/><line nr="150" mi="0" ci="10" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="49" covered="226"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="6" covered="40"/><counter type="COMPLEXITY" missed="7" covered="14"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSWriteResponse.java"><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="0"/><line nr="72" mi="2" ci="3" mb="1" cb="1"/><line nr="73" mi="2" ci="3" mb="1" cb="1"/><line nr="74" mi="2" ci="4" mb="1" cb="1"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="8" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="12" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="87"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADSDeviceNotificationResponse.java"><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ADSReadStateRequest.java"><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="636" covered="2769"/><counter type="BRANCH" missed="80" covered="88"/><counter type="LINE" missed="89" covered="493"/><counter type="COMPLEXITY" missed="99" covered="200"/><counter type="METHOD" missed="22" covered="193"/><counter type="CLASS" missed="1" covered="21"/></package><package name="org/apache/plc4x/java/ads/api/generic/types"><class name="org/apache/plc4x/java/ads/api/generic/types/AMSPort"><method name="&lt;init&gt;" desc="([B)V" line="34"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;" line="39"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(I)Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;" line="43"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;" line="52"><counter type="INSTRUCTION" missed="14" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;" line="59"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="67"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/generic/types/TcpLength"><method name="&lt;init&gt;" desc="([B)V" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/generic/types/TcpLength;" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/generic/types/TcpLength;" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/generic/types/TcpLength;" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/generic/types/TcpLength;" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/generic/types/Command"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="53"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;II)V" line="59"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBytes" desc="()[B" line="71"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByteBuf" desc="()Lio/netty/buffer/ByteBuf;" line="79"><counter type="INSTRUCTION" missed="5" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/generic/types/Command;" line="87"><counter type="INSTRUCTION" missed="4" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(I)Lorg/apache/plc4x/java/ads/api/generic/types/Command;" line="97"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/generic/types/Command;" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofInt" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/generic/types/Command;" line="110"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/generic/types/Command;" line="114"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="119"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="124"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="247"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="7" covered="35"/><counter type="COMPLEXITY" missed="7" covered="10"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/generic/types/Invoke"><method name="&lt;init&gt;" desc="([B)V" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/generic/types/State$StateMask"><method name="&lt;init&gt;" desc="(Ljava/lang/String;II)V" line="63"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applies" desc="(I)Z" line="68"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applies" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/State;)Z" line="72"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMask" desc="()I" line="76"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="148"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/generic/types/State"><method name="&lt;init&gt;" desc="([B)V" line="92"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="96"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/generic/types/State;" line="108"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(I)Lorg/apache/plc4x/java/ads/api/generic/types/State;" line="112"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/generic/types/State;" line="116"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/generic/types/State;" line="120"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([Lorg/apache/plc4x/java/ads/api/generic/types/State$StateMask;)Lorg/apache/plc4x/java/ads/api/generic/types/State;" line="124"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStateMaskEnumSet" desc="()Ljava/util/EnumSet;" line="128"><counter type="INSTRUCTION" missed="28" covered="42"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="7" covered="13"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isResponse" desc="()Z" line="160"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRequest" desc="()Z" line="164"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNoReturn" desc="()Z" line="168"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isADSCommand" desc="()Z" line="172"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSystemCommand" desc="()Z" line="176"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isHighPriorityCommand" desc="()Z" line="180"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTimestampAdded" desc="()Z" line="184"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUDPCommand" desc="()Z" line="188"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInitCommand" desc="()Z" line="192"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBroadcast" desc="()Z" line="196"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="201"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$of$0" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;" line="124"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="176"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="7" covered="39"/><counter type="COMPLEXITY" missed="8" covered="25"/><counter type="METHOD" missed="0" covered="23"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/generic/types/DataLength"><method name="&lt;init&gt;" desc="([B)V" line="30"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/generic/types/DataLength;" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/generic/types/DataLength;" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/util/LengthSupplier;)Lorg/apache/plc4x/java/ads/api/generic/types/DataLength;" line="54"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/generic/types/DataLength;" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/generic/types/DataLength;" line="62"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/generic/types/AMSError"><method name="&lt;init&gt;" desc="([B)V" line="32"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="36"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/generic/types/AMSError;" line="44"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/generic/types/AMSError;" line="48"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/generic/types/AMSError;" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/generic/types/AMSError;" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toAdsReturnCode" desc="()Lorg/apache/plc4x/java/ads/api/commands/types/AdsReturnCode;" line="60"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/generic/types/AMSNetId"><method name="&lt;init&gt;" desc="([B)V" line="47"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([B)Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;" line="52"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(IIIIII)Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;" line="56"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Ljava/lang/String;)Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;" line="60"><counter type="INSTRUCTION" missed="14" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;" line="69"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$of$0" desc="(I)[Ljava/lang/Byte;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="96"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DataLength.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AMSNetId.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="36" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="1" cb="1"/><line nr="61" mi="14" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="14" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="39" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="96"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AMSPort.java"><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="1" cb="1"/><line nr="53" mi="14" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="67"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Invoke.java"><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="State.java"><line nr="50" mi="0" ci="40" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="9" ci="0" mb="2" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="2"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="24" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="13" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="19" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="2"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="1" cb="1"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="1" cb="1"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="1" cb="1"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="1" cb="1"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="1" cb="1"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="1" cb="1"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="1" cb="1"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="1" cb="1"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="7" mb="0" cb="2"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="324"/><counter type="BRANCH" missed="10" covered="14"/><counter type="LINE" missed="8" covered="55"/><counter type="COMPLEXITY" missed="10" covered="31"/><counter type="METHOD" missed="1" covered="28"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AMSError.java"><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TcpLength.java"><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Command.java"><line nr="31" mi="0" ci="48" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="33" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="36" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="2" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="1" cb="1"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="2" ci="14" mb="1" cb="1"/><line nr="88" mi="0" ci="5" mb="1" cb="1"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="16" mb="1" cb="1"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="24" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="247"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="7" covered="35"/><counter type="COMPLEXITY" missed="7" covered="10"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="127" covered="907"/><counter type="BRANCH" missed="18" covered="22"/><counter type="LINE" missed="18" covered="171"/><counter type="COMPLEXITY" missed="20" covered="92"/><counter type="METHOD" missed="4" covered="88"/><counter type="CLASS" missed="0" covered="9"/></package><package name="org/apache/plc4x/java/ads/api/util"><class name="org/apache/plc4x/java/ads/api/util/ByteReadableUtils"><method name="buildByteBuff" desc="([Lorg/apache/plc4x/java/ads/api/util/ByteReadable;)Lio/netty/buffer/ByteBuf;" line="31"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/util/UnsignedShortLEByteValue"><method name="&lt;init&gt;" desc="([B)V" line="32"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="38"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofInt" desc="(J)[B" line="52"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsInt" desc="()I" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCalculatedLength" desc="()J" line="65"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="70"><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="81"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="88"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="118"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="28"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/util/ByteReadable"><method name="getBytes" desc="()[B" line="31"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCalculatedLength" desc="()J" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dump" desc="()Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/util/ByteValue"><method name="&lt;init&gt;" desc="([B)V" line="32"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertLength" desc="(I)V" line="38"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkUnsignedBounds" desc="(JI)V" line="44"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkUnsignedBounds" desc="(Ljava/math/BigInteger;I)V" line="51"><counter type="INSTRUCTION" missed="16" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBytes" desc="()[B" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getByteBuf" desc="()Lio/netty/buffer/ByteBuf;" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="69"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="79"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="85"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="134"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/util/UnsignedIntLEByteValue"><method name="&lt;init&gt;" desc="([B)V" line="32"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="38"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/netty/buffer/ByteBuf;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofLong" desc="(J)[B" line="52"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsLong" desc="()J" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCalculatedLength" desc="()J" line="67"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="72"><counter type="INSTRUCTION" missed="7" covered="22"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="83"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="137"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="28"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="UnsignedIntLEByteValue.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="28" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="3" mb="1" cb="1"/><line nr="73" mi="2" ci="3" mb="1" cb="1"/><line nr="74" mi="2" ci="4" mb="1" cb="1"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="1" ci="9" mb="1" cb="1"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="13" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="137"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="28"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ByteReadableUtils.java"><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="16" mb="0" cb="2"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ByteReadable.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnsignedShortLEByteValue.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="15" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="3" mb="1" cb="1"/><line nr="71" mi="2" ci="3" mb="1" cb="1"/><line nr="72" mi="2" ci="4" mb="1" cb="1"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="1" ci="8" mb="1" cb="1"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="11" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="118"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="28"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ByteValue.java"><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="2"/><line nr="39" mi="0" ci="18" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="9" mb="0" cb="4"/><line nr="46" mi="0" ci="16" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="2" cb="2"/><line nr="53" mi="16" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="2"/><line nr="70" mi="2" ci="3" mb="1" cb="1"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="23" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="134"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="36" covered="459"/><counter type="BRANCH" missed="11" covered="21"/><counter type="LINE" missed="3" covered="90"/><counter type="COMPLEXITY" missed="13" covered="36"/><counter type="METHOD" missed="2" covered="31"/><counter type="CLASS" missed="0" covered="5"/></package><package name="org/apache/plc4x/java/ads/netty"><class name="org/apache/plc4x/java/ads/netty/Plc4XADSProtocol$1"><method name="&lt;clinit&gt;" desc="()V" line="207"><counter type="INSTRUCTION" missed="121" covered="731"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="121" covered="731"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/netty/ADSProtocol$1"><method name="&lt;clinit&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="11" covered="71"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="71"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/netty/ADSProtocol"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Lio/netty/channel/ChannelHandlerContext;Lorg/apache/plc4x/java/ads/api/generic/AMSTCPPacket;Ljava/util/List;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V" line="63"><counter type="INSTRUCTION" missed="39" covered="160"/><counter type="BRANCH" missed="4" covered="13"/><counter type="LINE" missed="5" covered="41"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleInvalidCommand" desc="(Lio/netty/buffer/ByteBuf;Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)Lorg/apache/plc4x/java/ads/api/generic/AMSTCPPacket;" line="129"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleADSReadDeviceInfoCommand" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/State;Lio/netty/buffer/ByteBuf;Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)Lorg/apache/plc4x/java/ads/api/generic/AMSTCPPacket;" line="135"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleADSReadCommand" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/State;Lio/netty/buffer/ByteBuf;Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)Lorg/apache/plc4x/java/ads/api/generic/AMSTCPPacket;" line="150"><counter type="INSTRUCTION" missed="13" covered="52"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleADSWriteCommand" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/State;Lio/netty/buffer/ByteBuf;Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)Lorg/apache/plc4x/java/ads/api/generic/AMSTCPPacket;" line="171"><counter type="INSTRUCTION" missed="13" covered="48"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleADSReadStateCommand" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/State;Lio/netty/buffer/ByteBuf;Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)Lorg/apache/plc4x/java/ads/api/generic/AMSTCPPacket;" line="192"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleADSWriteControlCommand" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/State;Lio/netty/buffer/ByteBuf;Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)Lorg/apache/plc4x/java/ads/api/generic/AMSTCPPacket;" line="203"><counter type="INSTRUCTION" missed="13" covered="48"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleADSAddDeviceNotificationCommand" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/State;Lio/netty/buffer/ByteBuf;Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)Lorg/apache/plc4x/java/ads/api/generic/AMSTCPPacket;" line="223"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handADSDeleteDeviceNotificationCommand" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/State;Lio/netty/buffer/ByteBuf;Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)Lorg/apache/plc4x/java/ads/api/generic/AMSTCPPacket;" line="242"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleADSDeviceNotificationCommand" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/State;Lio/netty/buffer/ByteBuf;Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)Lorg/apache/plc4x/java/ads/api/generic/AMSTCPPacket;" line="254"><counter type="INSTRUCTION" missed="31" covered="60"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleStampHeader" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/AdsStampHeader;" line="277"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleAdsNotificartionSample" desc="(Lio/netty/buffer/ByteBuf;)Lorg/apache/plc4x/java/ads/api/commands/types/AdsNotificationSample;" line="290"><counter type="INSTRUCTION" missed="13" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleADSReadWriteCommand" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/State;Lio/netty/buffer/ByteBuf;Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)Lorg/apache/plc4x/java/ads/api/generic/AMSTCPPacket;" line="304"><counter type="INSTRUCTION" missed="55" covered="87"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleUnknownCommand" desc="(Lio/netty/buffer/ByteBuf;Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)Lorg/apache/plc4x/java/ads/api/generic/AMSTCPPacket;" line="338"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="191" covered="671"/><counter type="BRANCH" missed="16" covered="45"/><counter type="LINE" missed="20" covered="173"/><counter type="COMPLEXITY" missed="18" covered="34"/><counter type="METHOD" missed="2" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/netty/Plc4XADSProtocol"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Lio/netty/channel/ChannelHandlerContext;Lorg/apache/plc4x/java/api/messages/PlcRequestContainer;Ljava/util/List;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encodeWriteRequest" desc="(Lorg/apache/plc4x/java/api/messages/PlcRequestContainer;Ljava/util/List;)V" line="92"><counter type="INSTRUCTION" missed="24" covered="92"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encodeReadRequest" desc="(Lorg/apache/plc4x/java/api/messages/PlcRequestContainer;Ljava/util/List;)V" line="123"><counter type="INSTRUCTION" missed="18" covered="68"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="(Lio/netty/channel/ChannelHandlerContext;Lorg/apache/plc4x/java/ads/api/generic/AMSTCPPacket;Ljava/util/List;)V" line="145"><counter type="INSTRUCTION" missed="29" covered="55"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decodeWriteResponse" desc="(Lorg/apache/plc4x/java/ads/api/commands/ADSWriteResponse;Lorg/apache/plc4x/java/api/messages/PlcRequestContainer;)Lorg/apache/plc4x/java/api/messages/PlcResponse;" line="177"><counter type="INSTRUCTION" missed="11" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decodeReadResponse" desc="(Lorg/apache/plc4x/java/ads/api/commands/ADSReadResponse;Lorg/apache/plc4x/java/api/messages/PlcRequestContainer;)Lorg/apache/plc4x/java/api/messages/PlcResponse;" line="191"><counter type="INSTRUCTION" missed="13" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decodeResponseCode" desc="(Lorg/apache/plc4x/java/ads/api/commands/types/Result;)Lorg/apache/plc4x/java/api/types/ResponseCode;" line="207"><counter type="INSTRUCTION" missed="23" covered="8"/><counter type="BRANCH" missed="6" covered="1"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="118" covered="340"/><counter type="BRANCH" missed="18" covered="19"/><counter type="LINE" missed="18" covered="78"/><counter type="COMPLEXITY" missed="18" covered="12"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Plc4XADSProtocol.java"><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="2"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="1" cb="1"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="1" cb="1"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="1" cb="1"/><line nr="99" mi="13" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="10" mb="0" cb="2"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="14" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="1" cb="1"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="1" cb="1"/><line nr="131" mi="13" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="14" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="10" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="1" cb="1"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="2"/><line nr="155" mi="0" ci="3" mb="1" cb="1"/><line nr="156" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="12" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="1" cb="1"/><line nr="161" mi="0" ci="3" mb="1" cb="1"/><line nr="162" mi="0" ci="7" mb="0" cb="0"/><line nr="164" mi="12" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="1" cb="1"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="1" cb="1"/><line nr="183" mi="0" ci="12" mb="0" cb="0"/><line nr="185" mi="11" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="1" cb="1"/><line nr="200" mi="0" ci="14" mb="0" cb="0"/><line nr="202" mi="13" ci="0" mb="0" cb="0"/><line nr="207" mi="121" ci="737" mb="6" cb="1"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="0" cb="0"/><line nr="216" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="332" mi="2" ci="0" mb="0" cb="0"/><line nr="334" mi="2" ci="0" mb="0" cb="0"/><line nr="336" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="239" covered="1071"/><counter type="BRANCH" missed="18" covered="19"/><counter type="LINE" missed="18" covered="78"/><counter type="COMPLEXITY" missed="18" covered="13"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ADSProtocol.java"><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="1" cb="1"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="2"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="1" cb="1"/><line nr="79" mi="13" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="11" mb="0" cb="0"/><line nr="85" mi="11" ci="76" mb="2" cb="9"/><line nr="87" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="6" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="1" cb="1"/><line nr="123" mi="13" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="2"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="9" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="2"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="1" cb="1"/><line nr="159" mi="13" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="2"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="1" cb="1"/><line nr="176" mi="13" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="8" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="2"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="2"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="1" cb="1"/><line nr="208" mi="13" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="8" mb="0" cb="0"/><line nr="214" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="2"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="10" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="2"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="1" cb="1"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="1" cb="1"/><line nr="257" mi="13" ci="0" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="1" cb="1"/><line nr="261" mi="13" ci="0" mb="0" cb="0"/><line nr="263" mi="0" ci="6" mb="0" cb="0"/><line nr="264" mi="0" ci="7" mb="0" cb="0"/><line nr="265" mi="0" ci="10" mb="0" cb="2"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="7" mb="0" cb="0"/><line nr="270" mi="0" ci="1" mb="0" cb="0"/><line nr="271" mi="5" ci="0" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="10" mb="0" cb="2"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="5" mb="1" cb="1"/><line nr="293" mi="13" ci="0" mb="0" cb="0"/><line nr="296" mi="0" ci="5" mb="0" cb="0"/><line nr="297" mi="0" ci="4" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="2"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="308" mi="0" ci="5" mb="1" cb="1"/><line nr="309" mi="13" ci="0" mb="0" cb="0"/><line nr="311" mi="0" ci="3" mb="0" cb="0"/><line nr="312" mi="0" ci="5" mb="1" cb="1"/><line nr="313" mi="13" ci="0" mb="0" cb="0"/><line nr="315" mi="0" ci="8" mb="1" cb="1"/><line nr="316" mi="16" ci="0" mb="0" cb="0"/><line nr="318" mi="0" ci="5" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="0" ci="9" mb="0" cb="0"/><line nr="322" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="3" mb="0" cb="0"/><line nr="325" mi="0" ci="5" mb="1" cb="1"/><line nr="326" mi="13" ci="0" mb="0" cb="0"/><line nr="328" mi="0" ci="5" mb="0" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="0"/><line nr="331" mi="0" ci="7" mb="0" cb="0"/><line nr="333" mi="0" ci="2" mb="0" cb="0"/><line nr="338" mi="5" ci="0" mb="0" cb="0"/><line nr="339" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="202" covered="742"/><counter type="BRANCH" missed="16" covered="45"/><counter type="LINE" missed="20" covered="173"/><counter type="COMPLEXITY" missed="18" covered="35"/><counter type="METHOD" missed="2" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="441" covered="1813"/><counter type="BRANCH" missed="34" covered="64"/><counter type="LINE" missed="38" covered="251"/><counter type="COMPLEXITY" missed="36" covered="48"/><counter type="METHOD" missed="2" covered="26"/><counter type="CLASS" missed="0" covered="4"/></package><package name="org/apache/plc4x/java/ads/api/generic"><class name="org/apache/plc4x/java/ads/api/generic/ADSData"><method name="lambda$static$0" desc="()Lio/netty/buffer/ByteBuf;" line="30"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/generic/AMSTCPHeader$Reserved"><method name="&lt;init&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/generic/AMSTCPPacket"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/State;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;)V" line="46"><counter type="INSTRUCTION" missed="12" covered="57"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAmsTcpHeader" desc="()Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAmsHeader" desc="()Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;" line="68"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getByteBuf" desc="()Lio/netty/buffer/ByteBuf;" line="75"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildADSData" desc="([Lorg/apache/plc4x/java/ads/api/util/ByteReadable;)Lorg/apache/plc4x/java/ads/api/generic/ADSData;" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="84"><counter type="INSTRUCTION" missed="6" covered="21"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="95"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$buildADSData$3" desc="([Lorg/apache/plc4x/java/ads/api/util/ByteReadable;)Lio/netty/buffer/ByteBuf;" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="()J" line="60"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="()J" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="()J" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="35" covered="176"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="5" covered="31"/><counter type="COMPLEXITY" missed="6" covered="12"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/generic/AMSHeader"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Command;Lorg/apache/plc4x/java/ads/api/generic/types/State;Lorg/apache/plc4x/java/ads/api/generic/types/DataLength;Lorg/apache/plc4x/java/ads/api/generic/types/AMSError;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Command;Lorg/apache/plc4x/java/ads/api/generic/types/State;Lorg/apache/plc4x/java/ads/api/util/LengthSupplier;Lorg/apache/plc4x/java/ads/api/generic/types/AMSError;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Command;Lorg/apache/plc4x/java/ads/api/generic/types/State;Lorg/apache/plc4x/java/ads/api/generic/types/DataLength;Lorg/apache/plc4x/java/ads/api/generic/types/AMSError;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;)Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;" line="102"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;Lorg/apache/plc4x/java/ads/api/generic/types/Command;Lorg/apache/plc4x/java/ads/api/generic/types/State;Lorg/apache/plc4x/java/ads/api/util/LengthSupplier;Lorg/apache/plc4x/java/ads/api/generic/types/AMSError;Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;)Lorg/apache/plc4x/java/ads/api/generic/AMSHeader;" line="106"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getByteBuf" desc="()Lio/netty/buffer/ByteBuf;" line="111"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargetAmsNetId" desc="()Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;" line="124"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargetAmsPort" desc="()Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSourceAmsNetId" desc="()Lorg/apache/plc4x/java/ads/api/generic/types/AMSNetId;" line="132"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSourceAmsPort" desc="()Lorg/apache/plc4x/java/ads/api/generic/types/AMSPort;" line="136"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCommandId" desc="()Lorg/apache/plc4x/java/ads/api/generic/types/Command;" line="140"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStateFlags" desc="()Lorg/apache/plc4x/java/ads/api/generic/types/State;" line="144"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDataLength" desc="()Lorg/apache/plc4x/java/ads/api/generic/types/DataLength;" line="148"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCode" desc="()Lorg/apache/plc4x/java/ads/api/generic/types/AMSError;" line="152"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInvokeId" desc="()Lorg/apache/plc4x/java/ads/api/generic/types/Invoke;" line="156"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="161"><counter type="INSTRUCTION" missed="20" covered="63"/><counter type="BRANCH" missed="10" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="179"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="193"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="90" covered="326"/><counter type="BRANCH" missed="10" covered="12"/><counter type="LINE" missed="10" covered="51"/><counter type="COMPLEXITY" missed="11" covered="17"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/plc4x/java/ads/api/generic/AMSTCPHeader"><method name="&lt;init&gt;" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/TcpLength;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Lorg/apache/plc4x/java/ads/api/util/LengthSupplier;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/apache/plc4x/java/ads/api/generic/types/TcpLength;)Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(J)Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([Lorg/apache/plc4x/java/ads/api/util/LengthSupplier;)Lorg/apache/plc4x/java/ads/api/generic/AMSTCPHeader;" line="63"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTcpLength" desc="()Lorg/apache/plc4x/java/ads/api/generic/types/TcpLength;" line="67"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getByteBuf" desc="()Lio/netty/buffer/ByteBuf;" line="72"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCalculatedLength" desc="()J" line="93"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="106"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="116"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="123"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="137"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="3" covered="27"/><counter type="COMPLEXITY" missed="5" covered="13"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ADSData.java"><line nr="30" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AMSHeader.java"><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="13" mb="0" cb="0"/><line nr="106" mi="0" ci="13" mb="0" cb="0"/><line nr="111" mi="0" ci="37" mb="0" cb="0"/><line nr="118" mi="0" ci="12" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="10" mb="0" cb="2"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="2" ci="3" mb="1" cb="1"/><line nr="162" mi="2" ci="3" mb="1" cb="1"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="2" ci="6" mb="1" cb="1"/><line nr="167" mi="2" ci="6" mb="1" cb="1"/><line nr="168" mi="2" ci="6" mb="1" cb="1"/><line nr="169" mi="2" ci="6" mb="1" cb="1"/><line nr="170" mi="2" ci="5" mb="1" cb="1"/><line nr="171" mi="2" ci="6" mb="1" cb="1"/><line nr="172" mi="2" ci="6" mb="1" cb="1"/><line nr="173" mi="2" ci="6" mb="1" cb="1"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="8" ci="0" mb="0" cb="0"/><line nr="181" mi="8" ci="0" mb="0" cb="0"/><line nr="182" mi="8" ci="0" mb="0" cb="0"/><line nr="183" mi="8" ci="0" mb="0" cb="0"/><line nr="184" mi="8" ci="0" mb="0" cb="0"/><line nr="185" mi="8" ci="0" mb="0" cb="0"/><line nr="186" mi="8" ci="0" mb="0" cb="0"/><line nr="187" mi="8" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="37" mb="0" cb="0"/><line nr="200" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="90" covered="326"/><counter type="BRANCH" missed="10" covered="12"/><counter type="LINE" missed="10" covered="51"/><counter type="COMPLEXITY" missed="11" covered="17"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AMSTCPPacket.java"><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="20" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="1" cb="1"/><line nr="48" mi="12" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="19" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="19" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="2" ci="3" mb="1" cb="1"/><line nr="85" mi="2" ci="3" mb="1" cb="1"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="2" ci="6" mb="1" cb="1"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="8" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="21" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="176"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="5" covered="31"/><counter type="COMPLEXITY" missed="6" covered="12"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AMSTCPHeader.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="2"/><line nr="72" mi="0" ci="14" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="12" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="2"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="17" mb="0" cb="2"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="2" ci="3" mb="1" cb="1"/><line nr="107" mi="2" ci="3" mb="1" cb="1"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="9" ci="0" mb="2" cb="0"/><line nr="117" mi="13" ci="0" mb="2" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="12" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="158"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="3" covered="31"/><counter type="COMPLEXITY" missed="5" covered="15"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="153" covered="665"/><counter type="BRANCH" missed="20" covered="24"/><counter type="LINE" missed="18" covered="114"/><counter type="COMPLEXITY" missed="22" covered="46"/><counter type="METHOD" missed="4" covered="42"/><counter type="CLASS" missed="0" covered="5"/></package><counter type="INSTRUCTION" missed="1569" covered="10225"/><counter type="BRANCH" missed="181" covered="259"/><counter type="LINE" missed="198" covered="1653"/><counter type="COMPLEXITY" missed="223" covered="660"/><counter type="METHOD" missed="49" covered="607"/><counter type="CLASS" missed="1" covered="72"/></report>